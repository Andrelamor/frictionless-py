(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{131:function(e,t,a){"use strict";a.d(t,"a",(function(){return j})),a.d(t,"b",(function(){return m}));var l=a(0),b=a.n(l);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,l,b=function(e,t){if(null==e)return{};var a,l,b={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var p=b.a.createContext({}),o=function(e){var t=b.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},j=function(e){var t=o(e.components);return b.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},O=b.a.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,r=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),j=o(a),O=l,m=j["".concat(r,".").concat(O)]||j[O]||s[O]||n;return a?b.a.createElement(m,c(c({ref:t},p),{},{components:a})):b.a.createElement(m,c({ref:t},p))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,r=new Array(n);r[0]=O;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:l,r[1]=c;for(var p=2;p<n;p++)r[p]=a[p];return b.a.createElement.apply(null,r)}return b.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},88:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return o}));var l=a(3),b=a(7),n=(a(0),a(131)),r={title:"API Referene"},c={unversionedId:"references/api-reference",id:"references/api-reference",isDocsHomePage:!1,title:"API Referene",description:"AnyType",source:"@site/../docs/references/api-reference.md",slug:"/references/api-reference",permalink:"/frictionless-py/docs/references/api-reference",editUrl:"https://github.com/frictionlessdata/frictionless-py/edit/master/docs/../docs/references/api-reference.md",version:"current",lastUpdatedBy:"Holger Bruch",lastUpdatedAt:1611560115,sidebar:"references",previous:{title:"Errors Reference",permalink:"/frictionless-py/docs/references/errors-reference"}},i=[{value:"AnyType",id:"anytype",children:[]},{value:"ApiServer",id:"apiserver",children:[]},{value:"ArrayType",id:"arraytype",children:[]},{value:"BigqueryDialect",id:"bigquerydialect",children:[]},{value:"BigqueryParser",id:"bigqueryparser",children:[]},{value:"BigqueryPlugin",id:"bigqueryplugin",children:[]},{value:"BigqueryStorage",id:"bigquerystorage",children:[]},{value:"BooleanType",id:"booleantype",children:[]},{value:"CellError",id:"cellerror",children:[{value:"cellError.from_row",id:"cellerrorfrom_row",children:[]}]},{value:"Check",id:"check",children:[{value:"check.table",id:"checktable",children:[]},{value:"check.connect",id:"checkconnect",children:[]},{value:"check.prepare",id:"checkprepare",children:[]},{value:"check.validate_task",id:"checkvalidate_task",children:[]},{value:"check.validate_schema",id:"checkvalidate_schema",children:[]},{value:"check.validate_header",id:"checkvalidate_header",children:[]},{value:"check.validate_row",id:"checkvalidate_row",children:[]},{value:"check.validate_table",id:"checkvalidate_table",children:[]}]},{value:"CkanDialect",id:"ckandialect",children:[]},{value:"CkanParser",id:"ckanparser",children:[]},{value:"CkanPlugin",id:"ckanplugin",children:[]},{value:"CkanStorage",id:"ckanstorage",children:[]},{value:"Control",id:"control",children:[{value:"control.newline",id:"controlnewline",children:[]},{value:"control.detect_encoding",id:"controldetect_encoding",children:[]}]},{value:"CsvDialect",id:"csvdialect",children:[{value:"csvDialect.delimiter",id:"csvdialectdelimiter",children:[]},{value:"csvDialect.line_terminator",id:"csvdialectline_terminator",children:[]},{value:"csvDialect.quote_char",id:"csvdialectquote_char",children:[]},{value:"csvDialect.double_quote",id:"csvdialectdouble_quote",children:[]},{value:"csvDialect.escape_char",id:"csvdialectescape_char",children:[]},{value:"csvDialect.null_sequence",id:"csvdialectnull_sequence",children:[]},{value:"csvDialect.skip_initial_space",id:"csvdialectskip_initial_space",children:[]},{value:"csvDialect.comment_char",id:"csvdialectcomment_char",children:[]},{value:"csvDialect.expand",id:"csvdialectexpand",children:[]},{value:"csvDialect.to_python",id:"csvdialectto_python",children:[]}]},{value:"CsvParser",id:"csvparser",children:[]},{value:"CsvPlugin",id:"csvplugin",children:[]},{value:"DateType",id:"datetype",children:[]},{value:"DatetimeType",id:"datetimetype",children:[]},{value:"DurationType",id:"durationtype",children:[]},{value:"Error",id:"error",children:[{value:"error.note",id:"errornote",children:[]},{value:"error.message",id:"errormessage",children:[]}]},{value:"ExcelDialect",id:"exceldialect",children:[{value:"excelDialect.sheet",id:"exceldialectsheet",children:[]},{value:"excelDialect.workbook_cache",id:"exceldialectworkbook_cache",children:[]},{value:"excelDialect.fill_merged_cells",id:"exceldialectfill_merged_cells",children:[]},{value:"excelDialect.preserve_formatting",id:"exceldialectpreserve_formatting",children:[]},{value:"excelDialect.adjust_floating_point_error",id:"exceldialectadjust_floating_point_error",children:[]},{value:"excelDialect.expand",id:"exceldialectexpand",children:[]}]},{value:"ExcelPlugin",id:"excelplugin",children:[]},{value:"Field",id:"field",children:[{value:"field.name",id:"fieldname",children:[]},{value:"field.title",id:"fieldtitle",children:[]},{value:"field.description",id:"fielddescription",children:[]},{value:"field.type",id:"fieldtype",children:[]},{value:"field.format",id:"fieldformat",children:[]},{value:"field.missing_values",id:"fieldmissing_values",children:[]},{value:"field.constraints",id:"fieldconstraints",children:[]},{value:"field.rdf_type",id:"fieldrdf_type",children:[]},{value:"field.required",id:"fieldrequired",children:[]},{value:"field.schema",id:"fieldschema",children:[]},{value:"field.true_values",id:"fieldtrue_values",children:[]},{value:"field.false_values",id:"fieldfalse_values",children:[]},{value:"field.bare_number",id:"fieldbare_number",children:[]},{value:"field.float_number",id:"fieldfloat_number",children:[]},{value:"field.decimal_char",id:"fielddecimal_char",children:[]},{value:"field.group_char",id:"fieldgroup_char",children:[]},{value:"field.expand",id:"fieldexpand",children:[]},{value:"field.read_cell",id:"fieldread_cell",children:[]},{value:"field.read_cell_convert",id:"fieldread_cell_convert",children:[]},{value:"field.read_cell_checks",id:"fieldread_cell_checks",children:[]},{value:"field.write_cell",id:"fieldwrite_cell",children:[]},{value:"field.write_cell_convert",id:"fieldwrite_cell_convert",children:[]},{value:"field.write_cell_missing_value",id:"fieldwrite_cell_missing_value",children:[]}]},{value:"File",id:"file",children:[]},{value:"FilelikeControl",id:"filelikecontrol",children:[]},{value:"FilelikeLoader",id:"filelikeloader",children:[]},{value:"FilelikePlugin",id:"filelikeplugin",children:[]},{value:"FrictionlessException",id:"frictionlessexception",children:[{value:"frictionlessException.error",id:"frictionlessexceptionerror",children:[]}]},{value:"GeojsonType",id:"geojsontype",children:[]},{value:"GeopointType",id:"geopointtype",children:[]},{value:"GsheetsDialect",id:"gsheetsdialect",children:[{value:"gsheetsDialect.credentials",id:"gsheetsdialectcredentials",children:[]}]},{value:"GsheetsParser",id:"gsheetsparser",children:[]},{value:"GsheetsPlugin",id:"gsheetsplugin",children:[]},{value:"Header",id:"header",children:[{value:"header.fields",id:"headerfields",children:[]},{value:"header.field_names",id:"headerfield_names",children:[]},{value:"header.field_positions",id:"headerfield_positions",children:[]},{value:"header.row_positions",id:"headerrow_positions",children:[]},{value:"header.missing",id:"headermissing",children:[]},{value:"header.errors",id:"headererrors",children:[]},{value:"header.valid",id:"headervalid",children:[]},{value:"header.to_str",id:"headerto_str",children:[]},{value:"header.to_list",id:"headerto_list",children:[]}]},{value:"HeaderError",id:"headererror",children:[]},{value:"HtmlDialect",id:"htmldialect",children:[{value:"htmlDialect.selector",id:"htmldialectselector",children:[]},{value:"htmlDialect.expand",id:"htmldialectexpand",children:[]}]},{value:"HtmlParser",id:"htmlparser",children:[]},{value:"HtmlPlugin",id:"htmlplugin",children:[]},{value:"InlineDialect",id:"inlinedialect",children:[{value:"inlineDialect.keys",id:"inlinedialectkeys",children:[]},{value:"inlineDialect.keyed",id:"inlinedialectkeyed",children:[]},{value:"inlineDialect.expand",id:"inlinedialectexpand",children:[]}]},{value:"InlineParser",id:"inlineparser",children:[]},{value:"InlinePlugin",id:"inlineplugin",children:[]},{value:"Inquiry",id:"inquiry",children:[{value:"inquiry.tasks",id:"inquirytasks",children:[]}]},{value:"InquiryTask",id:"inquirytask",children:[{value:"inquiryTask.source",id:"inquirytasksource",children:[]},{value:"inquiryTask.type",id:"inquirytasktype",children:[]}]},{value:"IntegerType",id:"integertype",children:[]},{value:"JsonDialect",id:"jsondialect",children:[{value:"jsonDialect.keys",id:"jsondialectkeys",children:[]},{value:"jsonDialect.keyed",id:"jsondialectkeyed",children:[]},{value:"jsonDialect.property",id:"jsondialectproperty",children:[]},{value:"jsonDialect.expand",id:"jsondialectexpand",children:[]}]},{value:"JsonParser",id:"jsonparser",children:[]},{value:"JsonPlugin",id:"jsonplugin",children:[]},{value:"JsonlParser",id:"jsonlparser",children:[]},{value:"LabelError",id:"labelerror",children:[]},{value:"Layout",id:"layout",children:[{value:"layout.header",id:"layoutheader",children:[]},{value:"layout.header_rows",id:"layoutheader_rows",children:[]},{value:"layout.header_join",id:"layoutheader_join",children:[]},{value:"layout.header_case",id:"layoutheader_case",children:[]},{value:"layout.pick_fields",id:"layoutpick_fields",children:[]},{value:"layout.skip_fields",id:"layoutskip_fields",children:[]},{value:"layout.limit_fields",id:"layoutlimit_fields",children:[]},{value:"layout.offset_fields",id:"layoutoffset_fields",children:[]},{value:"layout.pick_rows",id:"layoutpick_rows",children:[]},{value:"layout.skip_rows",id:"layoutskip_rows",children:[]},{value:"layout.limit_rows",id:"layoutlimit_rows",children:[]},{value:"layout.offset_rows",id:"layoutoffset_rows",children:[]},{value:"layout.is_field_filtering",id:"layoutis_field_filtering",children:[]},{value:"layout.pick_fields_compiled",id:"layoutpick_fields_compiled",children:[]},{value:"layout.skip_fields_compiled",id:"layoutskip_fields_compiled",children:[]},{value:"layout.pick_rows_compiled",id:"layoutpick_rows_compiled",children:[]},{value:"layout.skip_rows_compiled",id:"layoutskip_rows_compiled",children:[]},{value:"layout.expand",id:"layoutexpand",children:[]}]},{value:"Loader",id:"loader",children:[{value:"loader.resource",id:"loaderresource",children:[]},{value:"loader.byte_stream",id:"loaderbyte_stream",children:[]},{value:"loader.text_stream",id:"loadertext_stream",children:[]},{value:"loader.open",id:"loaderopen",children:[]},{value:"loader.close",id:"loaderclose",children:[]},{value:"loader.closed",id:"loaderclosed",children:[]},{value:"loader.read_byte_stream",id:"loaderread_byte_stream",children:[]},{value:"loader.read_byte_stream_create",id:"loaderread_byte_stream_create",children:[]},{value:"loader.read_byte_stream_infer_stats",id:"loaderread_byte_stream_infer_stats",children:[]},{value:"loader.read_byte_stream_decompress",id:"loaderread_byte_stream_decompress",children:[]},{value:"loader.read_text_stream",id:"loaderread_text_stream",children:[]},{value:"loader.read_text_stream_infer_encoding",id:"loaderread_text_stream_infer_encoding",children:[]},{value:"loader.read_text_stream_decode",id:"loaderread_text_stream_decode",children:[]},{value:"loader.write_byte_stream",id:"loaderwrite_byte_stream",children:[]},{value:"loader.write_byte_stream_create",id:"loaderwrite_byte_stream_create",children:[]},{value:"loader.write_byte_stream_save",id:"loaderwrite_byte_stream_save",children:[]}]},{value:"LocalControl",id:"localcontrol",children:[]},{value:"LocalLoader",id:"localloader",children:[]},{value:"LocalPlugin",id:"localplugin",children:[]},{value:"Metadata",id:"metadata",children:[{value:"metadata.setinitial",id:"metadatasetinitial",children:[]},{value:"metadata.to_copy",id:"metadatato_copy",children:[]},{value:"metadata.to_dict",id:"metadatato_dict",children:[]},{value:"metadata.to_json",id:"metadatato_json",children:[]},{value:"metadata.to_yaml",id:"metadatato_yaml",children:[]},{value:"metadata.metadata_valid",id:"metadatametadata_valid",children:[]},{value:"metadata.metadata_errors",id:"metadatametadata_errors",children:[]},{value:"metadata.metadata_attach",id:"metadatametadata_attach",children:[]},{value:"metadata.metadata_extract",id:"metadatametadata_extract",children:[]},{value:"metadata.metadata_process",id:"metadatametadata_process",children:[]},{value:"metadata.metadata_validate",id:"metadatametadata_validate",children:[]},{value:"metadata.property",id:"metadataproperty",children:[]}]},{value:"MultipartControl",id:"multipartcontrol",children:[{value:"multipartControl.expand",id:"multipartcontrolexpand",children:[]}]},{value:"MultipartLoader",id:"multipartloader",children:[]},{value:"MultipartPlugin",id:"multipartplugin",children:[]},{value:"NumberType",id:"numbertype",children:[]},{value:"ObjectType",id:"objecttype",children:[]},{value:"OdsDialect",id:"odsdialect",children:[{value:"odsDialect.sheet",id:"odsdialectsheet",children:[]},{value:"odsDialect.expand",id:"odsdialectexpand",children:[]}]},{value:"OdsParser",id:"odsparser",children:[]},{value:"OdsPlugin",id:"odsplugin",children:[]},{value:"Package",id:"package",children:[{value:"package.name",id:"packagename",children:[]},{value:"package.id",id:"packageid",children:[]},{value:"package.licenses",id:"packagelicenses",children:[]},{value:"package.profile",id:"packageprofile",children:[]},{value:"package.title",id:"packagetitle",children:[]},{value:"package.description",id:"packagedescription",children:[]},{value:"package.homepage",id:"packagehomepage",children:[]},{value:"package.version",id:"packageversion",children:[]},{value:"package.sources",id:"packagesources",children:[]},{value:"package.contributors",id:"packagecontributors",children:[]},{value:"package.keywords",id:"packagekeywords",children:[]},{value:"package.image",id:"packageimage",children:[]},{value:"package.created",id:"packagecreated",children:[]},{value:"package.hashing",id:"packagehashing",children:[]},{value:"package.basepath",id:"packagebasepath",children:[]},{value:"package.onerror",id:"packageonerror",children:[]},{value:"package.trusted",id:"packagetrusted",children:[]},{value:"package.resources",id:"packageresources",children:[]},{value:"package.resource_names",id:"packageresource_names",children:[]},{value:"package.add_resource",id:"packageadd_resource",children:[]},{value:"package.get_resource",id:"packageget_resource",children:[]},{value:"package.has_resource",id:"packagehas_resource",children:[]},{value:"package.remove_resource",id:"packageremove_resource",children:[]},{value:"package.expand",id:"packageexpand",children:[]},{value:"package.infer",id:"packageinfer",children:[]},{value:"package.from_zip",id:"packagefrom_zip",children:[]},{value:"package.from_storage",id:"packagefrom_storage",children:[]},{value:"package.from_ckan",id:"packagefrom_ckan",children:[]},{value:"package.from_sql",id:"packagefrom_sql",children:[]},{value:"package.from_pandas",id:"packagefrom_pandas",children:[]},{value:"package.from_spss",id:"packagefrom_spss",children:[]},{value:"package.from_bigquery",id:"packagefrom_bigquery",children:[]},{value:"package.to_copy",id:"packageto_copy",children:[]},{value:"package.to_zip",id:"packageto_zip",children:[]},{value:"package.to_storage",id:"packageto_storage",children:[]},{value:"package.to_ckan",id:"packageto_ckan",children:[]},{value:"package.to_sql",id:"packageto_sql",children:[]},{value:"package.to_pandas",id:"packageto_pandas",children:[]},{value:"package.to_spss",id:"packageto_spss",children:[]},{value:"package.to_bigquery",id:"packageto_bigquery",children:[]}]},{value:"PandasDialect",id:"pandasdialect",children:[]},{value:"PandasParser",id:"pandasparser",children:[]},{value:"PandasPlugin",id:"pandasplugin",children:[]},{value:"PandasStorage",id:"pandasstorage",children:[]},{value:"Parser",id:"parser",children:[{value:"parser.resource",id:"parserresource",children:[]},{value:"parser.loader",id:"parserloader",children:[]},{value:"parser.data_stream",id:"parserdata_stream",children:[]},{value:"parser.open",id:"parseropen",children:[]},{value:"parser.close",id:"parserclose",children:[]},{value:"parser.closed",id:"parserclosed",children:[]},{value:"parser.read_loader",id:"parserread_loader",children:[]},{value:"parser.read_data_stream",id:"parserread_data_stream",children:[]},{value:"parser.read_data_stream_create",id:"parserread_data_stream_create",children:[]},{value:"parser.read_data_stream_handle_errors",id:"parserread_data_stream_handle_errors",children:[]},{value:"parser.write_row_stream",id:"parserwrite_row_stream",children:[]}]},{value:"Pipeline",id:"pipeline",children:[{value:"pipeline.tasks",id:"pipelinetasks",children:[]},{value:"pipeline.run",id:"pipelinerun",children:[]}]},{value:"PipelineTask",id:"pipelinetask",children:[{value:"pipelineTask.run",id:"pipelinetaskrun",children:[]}]},{value:"Plugin",id:"plugin",children:[{value:"plugin.create_check",id:"plugincreate_check",children:[]},{value:"plugin.create_control",id:"plugincreate_control",children:[]},{value:"plugin.create_dialect",id:"plugincreate_dialect",children:[]},{value:"plugin.create_loader",id:"plugincreate_loader",children:[]},{value:"plugin.create_parser",id:"plugincreate_parser",children:[]},{value:"plugin.create_server",id:"plugincreate_server",children:[]}]},{value:"RemoteControl",id:"remotecontrol",children:[{value:"remoteControl.http_session",id:"remotecontrolhttp_session",children:[]},{value:"remoteControl.http_preload",id:"remotecontrolhttp_preload",children:[]},{value:"remoteControl.http_timeout",id:"remotecontrolhttp_timeout",children:[]},{value:"remoteControl.expand",id:"remotecontrolexpand",children:[]}]},{value:"RemoteLoader",id:"remoteloader",children:[]},{value:"RemotePlugin",id:"remoteplugin",children:[]},{value:"Report",id:"report",children:[{value:"report.version",id:"reportversion",children:[]},{value:"report.time",id:"reporttime",children:[]},{value:"report.valid",id:"reportvalid",children:[]},{value:"report.stats",id:"reportstats",children:[]},{value:"report.errors",id:"reporterrors",children:[]},{value:"report.tasks",id:"reporttasks",children:[]},{value:"report.task",id:"reporttask",children:[]},{value:"report.expand",id:"reportexpand",children:[]},{value:"report.flatten",id:"reportflatten",children:[]},{value:"report.from_validate",id:"reportfrom_validate",children:[]}]},{value:"ReportTask",id:"reporttask-1",children:[{value:"reportTask.resource",id:"reporttaskresource",children:[]},{value:"reportTask.time",id:"reporttasktime",children:[]},{value:"reportTask.valid",id:"reporttaskvalid",children:[]},{value:"reportTask.scope",id:"reporttaskscope",children:[]},{value:"reportTask.partial",id:"reporttaskpartial",children:[]},{value:"reportTask.stats",id:"reporttaskstats",children:[]},{value:"reportTask.errors",id:"reporttaskerrors",children:[]},{value:"reportTask.error",id:"reporttaskerror",children:[]},{value:"reportTask.expand",id:"reporttaskexpand",children:[]},{value:"reportTask.flatten",id:"reporttaskflatten",children:[]}]},{value:"Resource",id:"resource",children:[{value:"resource.name",id:"resourcename",children:[]},{value:"resource.title",id:"resourcetitle",children:[]},{value:"resource.description",id:"resourcedescription",children:[]},{value:"resource.licenses",id:"resourcelicenses",children:[]},{value:"resource.sources",id:"resourcesources",children:[]},{value:"resource.profile",id:"resourceprofile",children:[]},{value:"resource.path",id:"resourcepath",children:[]},{value:"resource.data",id:"resourcedata",children:[]},{value:"resource.scheme",id:"resourcescheme",children:[]},{value:"resource.format",id:"resourceformat",children:[]},{value:"resource.hashing",id:"resourcehashing",children:[]},{value:"resource.encoding",id:"resourceencoding",children:[]},{value:"resource.innerpath",id:"resourceinnerpath",children:[]},{value:"resource.compression",id:"resourcecompression",children:[]},{value:"resource.control",id:"resourcecontrol",children:[]},{value:"resource.dialect",id:"resourcedialect",children:[]},{value:"resource.layout",id:"resourcelayout",children:[]},{value:"resource.schema",id:"resourceschema",children:[]},{value:"resource.sample",id:"resourcesample",children:[]},{value:"resource.header",id:"resourceheader",children:[]},{value:"resource.lookup",id:"resourcelookup",children:[]},{value:"resource.stats",id:"resourcestats",children:[]},{value:"resource.basepath",id:"resourcebasepath",children:[]},{value:"resource.fullpath",id:"resourcefullpath",children:[]},{value:"resource.onerror",id:"resourceonerror",children:[]},{value:"resource.trusted",id:"resourcetrusted",children:[]},{value:"resource.package",id:"resourcepackage",children:[]},{value:"resource.memory",id:"resourcememory",children:[]},{value:"resource.remote",id:"resourceremote",children:[]},{value:"resource.multipart",id:"resourcemultipart",children:[]},{value:"resource.tabular",id:"resourcetabular",children:[]},{value:"resource.byte_stream",id:"resourcebyte_stream",children:[]},{value:"resource.text_stream",id:"resourcetext_stream",children:[]},{value:"resource.data_stream",id:"resourcedata_stream",children:[]},{value:"resource.row_stream",id:"resourcerow_stream",children:[]},{value:"resource.expand",id:"resourceexpand",children:[]},{value:"resource.infer",id:"resourceinfer",children:[]},{value:"resource.open",id:"resourceopen",children:[]},{value:"resource.close",id:"resourceclose",children:[]},{value:"resource.closed",id:"resourceclosed",children:[]},{value:"resource.read_bytes",id:"resourceread_bytes",children:[]},{value:"resource.read_text",id:"resourceread_text",children:[]},{value:"resource.read_data",id:"resourceread_data",children:[]},{value:"resource.read_rows",id:"resourceread_rows",children:[]},{value:"resource.write",id:"resourcewrite",children:[]},{value:"resource.from_petl",id:"resourcefrom_petl",children:[]},{value:"resource.from_storage",id:"resourcefrom_storage",children:[]},{value:"resource.from_ckan",id:"resourcefrom_ckan",children:[]},{value:"resource.from_sql",id:"resourcefrom_sql",children:[]},{value:"resource.from_pandas",id:"resourcefrom_pandas",children:[]},{value:"resource.from_spss",id:"resourcefrom_spss",children:[]},{value:"resource.from_bigquery",id:"resourcefrom_bigquery",children:[]},{value:"resource.to_copy",id:"resourceto_copy",children:[]},{value:"resource.to_storage",id:"resourceto_storage",children:[]},{value:"resource.to_ckan",id:"resourceto_ckan",children:[]},{value:"resource.to_sql",id:"resourceto_sql",children:[]},{value:"resource.to_pandas",id:"resourceto_pandas",children:[]},{value:"resource.to_spss",id:"resourceto_spss",children:[]},{value:"resource.to_bigquery",id:"resourceto_bigquery",children:[]}]},{value:"Row",id:"row",children:[{value:"row.cells",id:"rowcells",children:[]},{value:"row.fields",id:"rowfields",children:[]},{value:"row.field_names",id:"rowfield_names",children:[]},{value:"row.field_positions",id:"rowfield_positions",children:[]},{value:"row.row_position",id:"rowrow_position",children:[]},{value:"row.row_number",id:"rowrow_number",children:[]},{value:"row.blank_cells",id:"rowblank_cells",children:[]},{value:"row.error_cells",id:"rowerror_cells",children:[]},{value:"row.errors",id:"rowerrors",children:[]},{value:"row.valid",id:"rowvalid",children:[]},{value:"row.to_str",id:"rowto_str",children:[]},{value:"row.to_list",id:"rowto_list",children:[]},{value:"row.to_dict",id:"rowto_dict",children:[]}]},{value:"RowError",id:"rowerror",children:[{value:"rowError.from_row",id:"rowerrorfrom_row",children:[]}]},{value:"S3Control",id:"s3control",children:[{value:"s3Control.expand",id:"s3controlexpand",children:[]}]},{value:"S3Loader",id:"s3loader",children:[]},{value:"S3Plugin",id:"s3plugin",children:[]},{value:"Schema",id:"schema",children:[{value:"schema.missing_values",id:"schemamissing_values",children:[]},{value:"schema.primary_key",id:"schemaprimary_key",children:[]},{value:"schema.foreign_keys",id:"schemaforeign_keys",children:[]},{value:"schema.fields",id:"schemafields",children:[]},{value:"schema.field_names",id:"schemafield_names",children:[]},{value:"schema.add_field",id:"schemaadd_field",children:[]},{value:"schema.get_field",id:"schemaget_field",children:[]},{value:"schema.has_field",id:"schemahas_field",children:[]},{value:"schema.remove_field",id:"schemaremove_field",children:[]},{value:"schema.expand",id:"schemaexpand",children:[]},{value:"schema.read_cells",id:"schemaread_cells",children:[]},{value:"schema.write_cells",id:"schemawrite_cells",children:[]},{value:"schema.from_sample",id:"schemafrom_sample",children:[]}]},{value:"Server",id:"server",children:[{value:"server.start",id:"serverstart",children:[]},{value:"server.stop",id:"serverstop",children:[]}]},{value:"ServerPlugin",id:"serverplugin",children:[]},{value:"SpssDialect",id:"spssdialect",children:[]},{value:"SpssParser",id:"spssparser",children:[]},{value:"SpssPlugin",id:"spssplugin",children:[]},{value:"SpssStorage",id:"spssstorage",children:[]},{value:"SqlDialect",id:"sqldialect",children:[]},{value:"SqlParser",id:"sqlparser",children:[]},{value:"SqlPlugin",id:"sqlplugin",children:[]},{value:"SqlStorage",id:"sqlstorage",children:[]},{value:"Status",id:"status",children:[{value:"status.version",id:"statusversion",children:[]},{value:"status.time",id:"statustime",children:[]},{value:"status.valid",id:"statusvalid",children:[]},{value:"status.stats",id:"statusstats",children:[]},{value:"status.errors",id:"statuserrors",children:[]},{value:"status.tasks",id:"statustasks",children:[]},{value:"status.task",id:"statustask",children:[]}]},{value:"StatusTask",id:"statustask-1",children:[{value:"statusTask.valid",id:"statustaskvalid",children:[]},{value:"statusTask.errors",id:"statustaskerrors",children:[]},{value:"statusTask.target",id:"statustasktarget",children:[]},{value:"statusTask.type",id:"statustasktype",children:[]}]},{value:"Storage",id:"storage",children:[]},{value:"StringType",id:"stringtype",children:[]},{value:"System",id:"system",children:[{value:"system.register",id:"systemregister",children:[]},{value:"system.create_check",id:"systemcreate_check",children:[]},{value:"system.create_control",id:"systemcreate_control",children:[]},{value:"system.create_dialect",id:"systemcreate_dialect",children:[]},{value:"system.create_file",id:"systemcreate_file",children:[]},{value:"system.create_loader",id:"systemcreate_loader",children:[]},{value:"system.create_parser",id:"systemcreate_parser",children:[]},{value:"system.create_server",id:"systemcreate_server",children:[]},{value:"system.create_step",id:"systemcreate_step",children:[]},{value:"system.create_storage",id:"systemcreate_storage",children:[]},{value:"system.create_type",id:"systemcreate_type",children:[]}]},{value:"TextControl",id:"textcontrol",children:[]},{value:"TextLoader",id:"textloader",children:[]},{value:"TextPlugin",id:"textplugin",children:[]},{value:"TimeType",id:"timetype",children:[]},{value:"Type",id:"type",children:[{value:"type.constraints",id:"typeconstraints",children:[]},{value:"type.field",id:"typefield",children:[]},{value:"type.read_cell",id:"typeread_cell",children:[]},{value:"type.write_cell",id:"typewrite_cell",children:[]}]},{value:"XlsParser",id:"xlsparser",children:[]},{value:"XlsxParser",id:"xlsxparser",children:[]},{value:"YearType",id:"yeartype",children:[]},{value:"YearmonthType",id:"yearmonthtype",children:[]},{value:"baseline",id:"baseline",children:[]},{value:"checksum",id:"checksum",children:[]},{value:"describe",id:"describe",children:[]},{value:"describe_package",id:"describe_package",children:[]},{value:"describe_resource",id:"describe_resource",children:[]},{value:"describe_schema",id:"describe_schema",children:[]},{value:"deviated_value",id:"deviated_value",children:[]},{value:"duplicate_row",id:"duplicate_row",children:[]},{value:"extract",id:"extract",children:[]},{value:"extract_package",id:"extract_package",children:[]},{value:"extract_resource",id:"extract_resource",children:[]},{value:"forbidden_value",id:"forbidden_value",children:[]},{value:"row_constraint",id:"row_constraint",children:[]},{value:"sequential_value",id:"sequential_value",children:[]},{value:"transform",id:"transform",children:[]},{value:"transform_package",id:"transform_package",children:[]},{value:"transform_pipeline",id:"transform_pipeline",children:[]},{value:"transform_resource",id:"transform_resource",children:[]},{value:"truncated_value",id:"truncated_value",children:[]},{value:"validate",id:"validate",children:[]},{value:"validate_inquiry",id:"validate_inquiry",children:[]},{value:"validate_package",id:"validate_package",children:[]},{value:"validate_resource",id:"validate_resource",children:[]},{value:"validate_schema",id:"validate_schema",children:[]}],p={toc:i};function o(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(n.b)("wrapper",Object(l.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"anytype"},"AnyType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class AnyType(Type)\n")),Object(n.b)("p",null,"Any type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"apiserver"},"ApiServer"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class ApiServer(Server)\n")),Object(n.b)("p",null,"API server implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.server import ApiParser"))))),Object(n.b)("h2",{id:"arraytype"},"ArrayType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class ArrayType(Type)\n")),Object(n.b)("p",null,"Array type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"bigquerydialect"},"BigqueryDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class BigqueryDialect(Dialect)\n")),Object(n.b)("p",null,"Bigquery dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.bigquery import BigqueryDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"project")," ",Object(n.b)("em",{parentName:"li"},"str")," - project"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset?")," ",Object(n.b)("em",{parentName:"li"},"str")," - dataset"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"table?")," ",Object(n.b)("em",{parentName:"li"},"str")," - table")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"bigqueryparser"},"BigqueryParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class BigqueryParser(Parser)\n")),Object(n.b)("p",null,"Bigquery parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.bigquery import BigqueryParser"))))),Object(n.b)("h2",{id:"bigqueryplugin"},"BigqueryPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class BigqueryPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for BigQuery"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.bigquery import BigqueryPlugin"))))),Object(n.b)("h2",{id:"bigquerystorage"},"BigqueryStorage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class BigqueryStorage(Storage)\n")),Object(n.b)("p",null,"BigQuery storage implementation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.bigquery import BigqueryStorage"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"service")," ",Object(n.b)("em",{parentName:"li"},"object")," - BigQuery ",Object(n.b)("inlineCode",{parentName:"li"},"Service")," object"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"project")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery project name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery dataset name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all names")),Object(n.b)("h2",{id:"booleantype"},"BooleanType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class BooleanType(Type)\n")),Object(n.b)("p",null,"Boolean type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"cellerror"},"CellError"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class CellError(RowError)\n")),Object(n.b)("p",null,"Cell error representation"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"descriptor?")," ",Object(n.b)("em",{parentName:"p"},"str|dict")," - error descriptor")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"note")," ",Object(n.b)("em",{parentName:"p"},"str")," - an error note")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"cells")," ",Object(n.b)("em",{parentName:"p"},"str[]")," - row cells")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"row_number")," ",Object(n.b)("em",{parentName:"p"},"int")," - row number")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"row_position")," ",Object(n.b)("em",{parentName:"p"},"int")," - row position")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"cell")," ",Object(n.b)("em",{parentName:"p"},"str")," - errored cell")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"field_name")," ",Object(n.b)("em",{parentName:"p"},"str")," - field name")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"field_number")," ",Object(n.b)("em",{parentName:"p"},"int")," - field number")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"field_position")," ",Object(n.b)("em",{parentName:"p"},"int")," - field position"),Object(n.b)("h1",Object(l.a)({parentName:"li"},{id:"raises"}),"Raises")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"FrictionlessException")," - raise any error that occurs during the process"))),Object(n.b)("h3",{id:"cellerrorfrom_row"},"cellError.from","_","row"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @classmethod\n | from_row(cls, row, *, note, field_name)\n")),Object(n.b)("p",null,"Create and error from a cell"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"row")," ",Object(n.b)("em",{parentName:"li"},"Row")," - row"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"note")," ",Object(n.b)("em",{parentName:"li"},"str")," - note"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_name")," ",Object(n.b)("em",{parentName:"li"},"str")," - field name")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"CellError")," - error")),Object(n.b)("h2",{id:"check"},"Check"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Check(Metadata)\n")),Object(n.b)("p",null,"Check representation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Checks"))))),Object(n.b)("p",null,"It's an interface for writing Frictionless checks."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - schema descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise if metadata is invalid")),Object(n.b)("h3",{id:"checktable"},"check.table"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | table()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Table?")," - table object available after the ",Object(n.b)("inlineCode",{parentName:"li"},"check.connect")," call")),Object(n.b)("h3",{id:"checkconnect"},"check.connect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | connect(table)\n")),Object(n.b)("p",null,"Connect to the given table"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"table")," ",Object(n.b)("em",{parentName:"li"},"Table")," - data table")),Object(n.b)("h3",{id:"checkprepare"},"check.prepare"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | prepare()\n")),Object(n.b)("p",null,"Called before validation"),Object(n.b)("h3",{id:"checkvalidate_task"},"check.validate","_","task"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | validate_task()\n")),Object(n.b)("p",null,"Called to validate the check itself"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error")," - found errors")),Object(n.b)("h3",{id:"checkvalidate_schema"},"check.validate","_","schema"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | validate_schema(schema)\n")),Object(n.b)("p",null,"Called to validate the given schema"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"schema")," ",Object(n.b)("em",{parentName:"li"},"Schema")," - table schema")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error")," - found errors")),Object(n.b)("h3",{id:"checkvalidate_header"},"check.validate","_","header"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | validate_header(header)\n")),Object(n.b)("p",null,"Called to validate the given header"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"header")," ",Object(n.b)("em",{parentName:"li"},"Header")," - table header")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error")," - found errors")),Object(n.b)("h3",{id:"checkvalidate_row"},"check.validate","_","row"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | validate_row(row)\n")),Object(n.b)("p",null,"Called to validate the given row (on every row)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"row")," ",Object(n.b)("em",{parentName:"li"},"Row")," - table row")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error")," - found errors")),Object(n.b)("h3",{id:"checkvalidate_table"},"check.validate","_","table"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | validate_table()\n")),Object(n.b)("p",null,"Called to validate the table (after no rows left)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error")," - found errors")),Object(n.b)("h2",{id:"ckandialect"},"CkanDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class CkanDialect(Dialect)\n")),Object(n.b)("p",null,"Ckan dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.ckan import CkanDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resource?")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset?")," ",Object(n.b)("em",{parentName:"li"},"str")," - dataset"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"apikey?")," ",Object(n.b)("em",{parentName:"li"},"str")," - apikey")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"ckanparser"},"CkanParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class CkanParser(Parser)\n")),Object(n.b)("p",null,"Ckan parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.ckan import CkanParser"))))),Object(n.b)("h2",{id:"ckanplugin"},"CkanPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class CkanPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for CKAN"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.ckan import CkanPlugin"))))),Object(n.b)("h2",{id:"ckanstorage"},"CkanStorage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class CkanStorage(Storage)\n")),Object(n.b)("p",null,"Ckan storage implementation"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"url")," ",Object(n.b)("em",{parentName:"p"},"string"),' - CKAN instance url e.g. "',Object(n.b)("a",Object(l.a)({parentName:"p"},{href:"https://demo.ckan.org%22"}),'https://demo.ckan.org"'))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"dataset")," ",Object(n.b)("em",{parentName:"p"},"string"),' - dataset id in CKAN e.g. "my-dataset"')),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"apikey?")," ",Object(n.b)("em",{parentName:"p"},"str"),' - API key for CKAN e.g. "51912f57-a657-4caa-b2a7-0a1c16821f4b"'),Object(n.b)("table",{parentName:"li"},Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.ckan import CkanStorage"))))))),Object(n.b)("h2",{id:"control"},"Control"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Control(Metadata)\n")),Object(n.b)("p",null,"Control representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Control"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"newline?")," ",Object(n.b)("em",{parentName:"li"},"str")," - a string to be used for ",Object(n.b)("inlineCode",{parentName:"li"},"io.open(..., newline=newline)")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"detectEncoding?")," ",Object(n.b)("em",{parentName:"li"},"func")," - a function to detect encoding ",Object(n.b)("inlineCode",{parentName:"li"},"(sample) -> encoding"))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"controlnewline"},"control.newline"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | newline()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - a string to be used for ",Object(n.b)("inlineCode",{parentName:"li"},"io.open(..., newline=newline)"))),Object(n.b)("h3",{id:"controldetect_encoding"},"control.detect","_","encoding"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | detect_encoding()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"func")," - detect encoding function")),Object(n.b)("h2",{id:"csvdialect"},"CsvDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class CsvDialect(Dialect)\n")),Object(n.b)("p",null,"Csv dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.csv import CsvDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"delimiter?")," ",Object(n.b)("em",{parentName:"li"},"str")," - csv delimiter"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"line_terminator?")," ",Object(n.b)("em",{parentName:"li"},"str")," - csv line terminator"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"quote_char?")," ",Object(n.b)("em",{parentName:"li"},"str")," - csv quote char"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"double_quote?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - csv double quote"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"escape_char?")," ",Object(n.b)("em",{parentName:"li"},"str")," - csv escape char"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"null_sequence?")," ",Object(n.b)("em",{parentName:"li"},"str")," - csv null sequence"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"skip_initial_space?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - csv skip initial space"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"comment_char?")," ",Object(n.b)("em",{parentName:"li"},"str")," - csv comment char")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"csvdialectdelimiter"},"csvDialect.delimiter"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | delimiter()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - delimiter")),Object(n.b)("h3",{id:"csvdialectline_terminator"},"csvDialect.line","_","terminator"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | line_terminator()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - line terminator")),Object(n.b)("h3",{id:"csvdialectquote_char"},"csvDialect.quote","_","char"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | quote_char()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - quote char")),Object(n.b)("h3",{id:"csvdialectdouble_quote"},"csvDialect.double","_","quote"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | double_quote()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - double quote")),Object(n.b)("h3",{id:"csvdialectescape_char"},"csvDialect.escape","_","char"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | escape_char()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - escape char")),Object(n.b)("h3",{id:"csvdialectnull_sequence"},"csvDialect.null","_","sequence"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | null_sequence()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - null sequence")),Object(n.b)("h3",{id:"csvdialectskip_initial_space"},"csvDialect.skip","_","initial","_","space"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | skip_initial_space()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if skipping initial space")),Object(n.b)("h3",{id:"csvdialectcomment_char"},"csvDialect.comment","_","char"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | comment_char()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - comment char")),Object(n.b)("h3",{id:"csvdialectexpand"},"csvDialect.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h3",{id:"csvdialectto_python"},"csvDialect.to","_","python"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_python()\n")),Object(n.b)("p",null,"Conver to Python's ",Object(n.b)("inlineCode",{parentName:"p"},"csv.Dialect")),Object(n.b)("h2",{id:"csvparser"},"CsvParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class CsvParser(Parser)\n")),Object(n.b)("p",null,"CSV parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"`from frictionless.plugins.csv import CsvPlugins")))),Object(n.b)("h2",{id:"csvplugin"},"CsvPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class CsvPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Pandas"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.csv import CsvPlugin"))))),Object(n.b)("h2",{id:"datetype"},"DateType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class DateType(Type)\n")),Object(n.b)("p",null,"Date type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"datetimetype"},"DatetimeType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class DatetimeType(Type)\n")),Object(n.b)("p",null,"Datetime type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"durationtype"},"DurationType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class DurationType(Type)\n")),Object(n.b)("p",null,"Duration type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"error"},"Error"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Error(Metadata)\n")),Object(n.b)("p",null,"Error representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import errors"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - error descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"note")," ",Object(n.b)("em",{parentName:"li"},"str")," - an error note")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"errornote"},"error.note"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | note()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - note")),Object(n.b)("h3",{id:"errormessage"},"error.message"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | message()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - message")),Object(n.b)("h2",{id:"exceldialect"},"ExcelDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class ExcelDialect(Dialect)\n")),Object(n.b)("p",null,"Excel dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.excel import ExcelDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"sheet?")," ",Object(n.b)("em",{parentName:"li"},"int|str")," - number from 1 or name of an excel sheet"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"workbook_cache?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - workbook cache"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"fill_merged_cells?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - whether to fill merged cells"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"preserve_formatting?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - whither to preserve formatting"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"adjust_floating_point_error?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - whether to adjust floating point error")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"exceldialectsheet"},"excelDialect.sheet"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | sheet()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str|int")," - sheet")),Object(n.b)("h3",{id:"exceldialectworkbook_cache"},"excelDialect.workbook","_","cache"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | workbook_cache()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - workbook cache")),Object(n.b)("h3",{id:"exceldialectfill_merged_cells"},"excelDialect.fill","_","merged","_","cells"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | fill_merged_cells()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - fill merged cells")),Object(n.b)("h3",{id:"exceldialectpreserve_formatting"},"excelDialect.preserve","_","formatting"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | preserve_formatting()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - preserve formatting")),Object(n.b)("h3",{id:"exceldialectadjust_floating_point_error"},"excelDialect.adjust","_","floating","_","point","_","error"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | adjust_floating_point_error()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - adjust floating point error")),Object(n.b)("h3",{id:"exceldialectexpand"},"excelDialect.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h2",{id:"excelplugin"},"ExcelPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class ExcelPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Excel"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.excel import ExcelPlugin"))))),Object(n.b)("h2",{id:"field"},"Field"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Field(Metadata)\n")),Object(n.b)("p",null,"Field representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Field"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - field descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name?")," ",Object(n.b)("em",{parentName:"li"},"str")," - field name (for machines)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"title?")," ",Object(n.b)("em",{parentName:"li"},"str")," - field title (for humans)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str")," - field descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"type?")," ",Object(n.b)("em",{parentName:"li"},"str")," - field type e.g. ",Object(n.b)("inlineCode",{parentName:"li"},"string")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"format?")," ",Object(n.b)("em",{parentName:"li"},"str")," - field format e.g. ",Object(n.b)("inlineCode",{parentName:"li"},"default")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"missing_values?")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - missing values"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"constraints?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - constraints"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"rdf_type?")," ",Object(n.b)("em",{parentName:"li"},"str")," - RDF type"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"schema?")," ",Object(n.b)("em",{parentName:"li"},"Schema")," - parent schema object")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"fieldname"},"field.name"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | name()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - name")),Object(n.b)("h3",{id:"fieldtitle"},"field.title"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | title()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - title")),Object(n.b)("h3",{id:"fielddescription"},"field.description"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | description()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - description")),Object(n.b)("h3",{id:"fieldtype"},"field.type"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | type()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - type")),Object(n.b)("h3",{id:"fieldformat"},"field.format"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | format()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - format")),Object(n.b)("h3",{id:"fieldmissing_values"},"field.missing","_","values"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | missing_values()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - missing values")),Object(n.b)("h3",{id:"fieldconstraints"},"field.constraints"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | constraints()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - constraints")),Object(n.b)("h3",{id:"fieldrdf_type"},"field.rdf","_","type"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | rdf_type()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - RDF Type")),Object(n.b)("h3",{id:"fieldrequired"},"field.required"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),' | @Metadata.property(\n |         write=lambda self, value: setitem(self.constraints, "required", value)\n |     )\n | required()\n')),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if field is requried")),Object(n.b)("h3",{id:"fieldschema"},"field.schema"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | schema()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Schema?")," - parent schema")),Object(n.b)("h3",{id:"fieldtrue_values"},"field.true","_","values"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | true_values()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - true values")),Object(n.b)("h3",{id:"fieldfalse_values"},"field.false","_","values"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | false_values()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - false values")),Object(n.b)("h3",{id:"fieldbare_number"},"field.bare","_","number"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | bare_number()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if a bare number")),Object(n.b)("h3",{id:"fieldfloat_number"},"field.float","_","number"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | float_number()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - whether it's a floating point number")),Object(n.b)("h3",{id:"fielddecimal_char"},"field.decimal","_","char"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | decimal_char()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - decimal char")),Object(n.b)("h3",{id:"fieldgroup_char"},"field.group","_","char"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | group_char()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - group char")),Object(n.b)("h3",{id:"fieldexpand"},"field.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h3",{id:"fieldread_cell"},"field.read","_","cell"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_cell(cell)\n")),Object(n.b)("p",null,"Read cell"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cell")," ",Object(n.b)("em",{parentName:"li"},"any")," - cell")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("p",null,"  (any, OrderedDict): processed cell and dict of notes"),Object(n.b)("h3",{id:"fieldread_cell_convert"},"field.read","_","cell","_","convert"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_cell_convert(cell)\n")),Object(n.b)("p",null,"Read cell (convert only)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cell")," ",Object(n.b)("em",{parentName:"li"},"any")," - cell")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any/None")," - processed cell or None if an error")),Object(n.b)("h3",{id:"fieldread_cell_checks"},"field.read","_","cell","_","checks"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | read_cell_checks()\n")),Object(n.b)("p",null,"Read cell (checks only)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"OrderedDict")," - dictionlary of check function by a constraint name")),Object(n.b)("h3",{id:"fieldwrite_cell"},"field.write","_","cell"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | write_cell(cell, *, ignore_missing=False)\n")),Object(n.b)("p",null,"Write cell"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cell")," ",Object(n.b)("em",{parentName:"li"},"any")," - cell to convert"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ignore_missing?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - don't convert None values")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("p",null,"  (any, OrderedDict): processed cell and dict of notes"),Object(n.b)("h3",{id:"fieldwrite_cell_convert"},"field.write","_","cell","_","convert"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | write_cell_convert(cell)\n")),Object(n.b)("p",null,"Write cell (convert only)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cell")," ",Object(n.b)("em",{parentName:"li"},"any")," - cell")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any/None")," - processed cell or None if an error")),Object(n.b)("h3",{id:"fieldwrite_cell_missing_value"},"field.write","_","cell","_","missing","_","value"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | write_cell_missing_value()\n")),Object(n.b)("p",null,"Write cell (missing value only)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - a value to replace None cells")),Object(n.b)("h2",{id:"file"},"File"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class File()\n")),Object(n.b)("p",null,"File representation"),Object(n.b)("h2",{id:"filelikecontrol"},"FilelikeControl"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class FilelikeControl(Control)\n")),Object(n.b)("p",null,"Filelike control representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.filelike import FilelikeControl"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"filelikeloader"},"FilelikeLoader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class FilelikeLoader(Loader)\n")),Object(n.b)("p",null,"Filelike loader implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.filelike import FilelikeLoader"))))),Object(n.b)("h2",{id:"filelikeplugin"},"FilelikePlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class FilelikePlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Local Data"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.filelike import FilelikePlugin"))))),Object(n.b)("h2",{id:"frictionlessexception"},"FrictionlessException"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class FrictionlessException(Exception)\n")),Object(n.b)("p",null,"Main Frictionless exception"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import FrictionlessException"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"error")," ",Object(n.b)("em",{parentName:"li"},"Error")," - an underlaying error")),Object(n.b)("h3",{id:"frictionlessexceptionerror"},"frictionlessException.error"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | error()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error")," - error")),Object(n.b)("h2",{id:"geojsontype"},"GeojsonType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class GeojsonType(Type)\n")),Object(n.b)("p",null,"Geojson type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"geopointtype"},"GeopointType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class GeopointType(Type)\n")),Object(n.b)("p",null,"Geopoint type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"gsheetsdialect"},"GsheetsDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class GsheetsDialect(Dialect)\n")),Object(n.b)("p",null,"Gsheets dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.gsheets import GsheetsDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"gsheetsdialectcredentials"},"gsheetsDialect.credentials"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | credentials()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - credentials")),Object(n.b)("h2",{id:"gsheetsparser"},"GsheetsParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class GsheetsParser(Parser)\n")),Object(n.b)("p",null,"Google Sheets parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.gsheets import GsheetsParser"))))),Object(n.b)("h2",{id:"gsheetsplugin"},"GsheetsPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class GsheetsPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Google Sheets"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.gsheets import GsheetsPlugin"))))),Object(n.b)("h2",{id:"header"},"Header"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Header(list)\n")),Object(n.b)("p",null,"Header representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Header"))))),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"Constructor of this object is not Public API")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"labels")," ",Object(n.b)("em",{parentName:"li"},"any[]")," - header row labels"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"fields")," ",Object(n.b)("em",{parentName:"li"},"Field[]")," - table fields"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_positions")," ",Object(n.b)("em",{parentName:"li"},"int[]")," - field positions"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"row_positions")," ",Object(n.b)("em",{parentName:"li"},"int[]")," - row positions"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ignore_case")," ",Object(n.b)("em",{parentName:"li"},"bool")," - ignore case")),Object(n.b)("h3",{id:"headerfields"},"header.fields"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | fields()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Schema")," - table fields")),Object(n.b)("h3",{id:"headerfield_names"},"header.field","_","names"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | field_names()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - table field names")),Object(n.b)("h3",{id:"headerfield_positions"},"header.field","_","positions"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | field_positions()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int[]")," - table field positions")),Object(n.b)("h3",{id:"headerrow_positions"},"header.row","_","positions"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | row_positions()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int[]")," - table row positions")),Object(n.b)("h3",{id:"headermissing"},"header.missing"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | missing()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if there is not header")),Object(n.b)("h3",{id:"headererrors"},"header.errors"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | errors()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error[]")," - header errors")),Object(n.b)("h3",{id:"headervalid"},"header.valid"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | valid()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if header valid")),Object(n.b)("h3",{id:"headerto_str"},"header.to","_","str"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_str()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - a row as a CSV string")),Object(n.b)("h3",{id:"headerto_list"},"header.to","_","list"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_list()\n")),Object(n.b)("p",null,"Convert to a list"),Object(n.b)("h2",{id:"headererror"},"HeaderError"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class HeaderError(Error)\n")),Object(n.b)("p",null,"Header error representation"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - error descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"note")," ",Object(n.b)("em",{parentName:"li"},"str")," - an error note"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"labels")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - header labels"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"label")," ",Object(n.b)("em",{parentName:"li"},"str")," - an errored label"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_name")," ",Object(n.b)("em",{parentName:"li"},"str")," - field name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_number")," ",Object(n.b)("em",{parentName:"li"},"int")," - field number"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_position")," ",Object(n.b)("em",{parentName:"li"},"int")," - field position")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"htmldialect"},"HtmlDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class HtmlDialect(Dialect)\n")),Object(n.b)("p",null,"Html dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.html import HtmlDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"selector?")," ",Object(n.b)("em",{parentName:"li"},"str")," - HTML selector")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"htmldialectselector"},"htmlDialect.selector"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | selector()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - selector")),Object(n.b)("h3",{id:"htmldialectexpand"},"htmlDialect.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h2",{id:"htmlparser"},"HtmlParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class HtmlParser(Parser)\n")),Object(n.b)("p",null,"HTML parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.html import HtmlParser"))))),Object(n.b)("h2",{id:"htmlplugin"},"HtmlPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class HtmlPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for HTML"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.html import HtmlPlugin"))))),Object(n.b)("h2",{id:"inlinedialect"},"InlineDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class InlineDialect(Dialect)\n")),Object(n.b)("p",null,"Inline dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.inline import InlineDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"keys?")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - a list of strings to use as data keys"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"keyed?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - whether data rows are keyed")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"inlinedialectkeys"},"inlineDialect.keys"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | keys()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]?")," - keys")),Object(n.b)("h3",{id:"inlinedialectkeyed"},"inlineDialect.keyed"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | keyed()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - keyed")),Object(n.b)("h3",{id:"inlinedialectexpand"},"inlineDialect.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h2",{id:"inlineparser"},"InlineParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class InlineParser(Parser)\n")),Object(n.b)("p",null,"Inline parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"`from frictionless.plugins.inline import InlineParser")))),Object(n.b)("h2",{id:"inlineplugin"},"InlinePlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class InlinePlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Inline"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.inline import InlinePlugin"))))),Object(n.b)("h2",{id:"inquiry"},"Inquiry"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Inquiry(Metadata)\n")),Object(n.b)("p",null,"Inquiry representation."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"inquirytasks"},"inquiry.tasks"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | tasks()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict[]")," - tasks")),Object(n.b)("h2",{id:"inquirytask"},"InquiryTask"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class InquiryTask(Metadata)\n")),Object(n.b)("p",null,"Inquiry task representation."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"inquirytasksource"},"inquiryTask.source"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | source()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any")," - source")),Object(n.b)("h3",{id:"inquirytasktype"},"inquiryTask.type"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | type()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"string?")," - type")),Object(n.b)("h2",{id:"integertype"},"IntegerType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class IntegerType(Type)\n")),Object(n.b)("p",null,"Integer type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"jsondialect"},"JsonDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class JsonDialect(Dialect)\n")),Object(n.b)("p",null,"Json dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.json import JsonDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"keys?")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - a list of strings to use as data keys"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"keyed?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - whether data rows are keyed"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"property?")," ",Object(n.b)("em",{parentName:"li"},"str")," - a path within JSON to the data")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"jsondialectkeys"},"jsonDialect.keys"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | keys()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]?")," - keys")),Object(n.b)("h3",{id:"jsondialectkeyed"},"jsonDialect.keyed"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | keyed()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - keyed")),Object(n.b)("h3",{id:"jsondialectproperty"},"jsonDialect.property"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | property()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - property")),Object(n.b)("h3",{id:"jsondialectexpand"},"jsonDialect.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h2",{id:"jsonparser"},"JsonParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class JsonParser(Parser)\n")),Object(n.b)("p",null,"JSON parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"`from frictionless.plugins.json import JsonParser")))),Object(n.b)("h2",{id:"jsonplugin"},"JsonPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class JsonPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Json"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.json import JsonPlugin"))))),Object(n.b)("h2",{id:"jsonlparser"},"JsonlParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class JsonlParser(Parser)\n")),Object(n.b)("p",null,"JSONL parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"`from frictionless.plugins.json import JsonlParser")))),Object(n.b)("h2",{id:"labelerror"},"LabelError"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class LabelError(HeaderError)\n")),Object(n.b)("p",null,"Label error representation"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - error descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"note")," ",Object(n.b)("em",{parentName:"li"},"str")," - an error note"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"labels")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - header labels"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"label")," ",Object(n.b)("em",{parentName:"li"},"str")," - an errored label"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_name")," ",Object(n.b)("em",{parentName:"li"},"str")," - field name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_number")," ",Object(n.b)("em",{parentName:"li"},"int")," - field number"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_position")," ",Object(n.b)("em",{parentName:"li"},"int")," - field position")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"layout"},"Layout"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Layout(Metadata)\n")),Object(n.b)("p",null,"Layout representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Layout"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - layout descriptor\npick_fields? ((str|int)[]): what fields to pick\nskip_fields? ((str|int)[]): what fields to skip"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"limit_fields?")," ",Object(n.b)("em",{parentName:"li"},"int")," - amount of fields"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"offset_fields?")," ",Object(n.b)("em",{parentName:"li"},"int")," - from what field to start\npick_rows? ((str|int)[]): what rows to pick\nskip_rows? ((str|int)[]): what rows to skip"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"limit_rows?")," ",Object(n.b)("em",{parentName:"li"},"int")," - amount of rows"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"offset_rows?")," ",Object(n.b)("em",{parentName:"li"},"int")," - from what row to start")),Object(n.b)("h3",{id:"layoutheader"},"layout.header"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | header()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if there is a header row")),Object(n.b)("h3",{id:"layoutheader_rows"},"layout.header","_","rows"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | header_rows()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int[]")," - header rows")),Object(n.b)("h3",{id:"layoutheader_join"},"layout.header","_","join"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | header_join()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - header joiner")),Object(n.b)("h3",{id:"layoutheader_case"},"layout.header","_","case"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | header_case()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - header case sensitive")),Object(n.b)("h3",{id:"layoutpick_fields"},"layout.pick","_","fields"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | pick_fields()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"(str|int)[]?")," - pick fields")),Object(n.b)("h3",{id:"layoutskip_fields"},"layout.skip","_","fields"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | skip_fields()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"(str|int)[]?")," - skip fields")),Object(n.b)("h3",{id:"layoutlimit_fields"},"layout.limit","_","fields"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | limit_fields()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int?")," - limit fields")),Object(n.b)("h3",{id:"layoutoffset_fields"},"layout.offset","_","fields"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | offset_fields()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int?")," - offset fields")),Object(n.b)("h3",{id:"layoutpick_rows"},"layout.pick","_","rows"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | pick_rows()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"(str|int)[]?")," - pick rows")),Object(n.b)("h3",{id:"layoutskip_rows"},"layout.skip","_","rows"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | skip_rows()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"(str|int)[]?")," - skip rows")),Object(n.b)("h3",{id:"layoutlimit_rows"},"layout.limit","_","rows"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | limit_rows()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int?")," - limit rows")),Object(n.b)("h3",{id:"layoutoffset_rows"},"layout.offset","_","rows"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | offset_rows()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int?")," - offset rows")),Object(n.b)("h3",{id:"layoutis_field_filtering"},"layout.is","_","field","_","filtering"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | is_field_filtering()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - whether there is a field filtering")),Object(n.b)("h3",{id:"layoutpick_fields_compiled"},"layout.pick","_","fields","_","compiled"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | pick_fields_compiled()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"re?")," - compiled pick fields")),Object(n.b)("h3",{id:"layoutskip_fields_compiled"},"layout.skip","_","fields","_","compiled"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | skip_fields_compiled()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"re?")," - compiled skip fields")),Object(n.b)("h3",{id:"layoutpick_rows_compiled"},"layout.pick","_","rows","_","compiled"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | pick_rows_compiled()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"re?")," - compiled pick rows")),Object(n.b)("h3",{id:"layoutskip_rows_compiled"},"layout.skip","_","rows","_","compiled"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | skip_rows_compiled()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"re?")," - compiled skip fields")),Object(n.b)("h3",{id:"layoutexpand"},"layout.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h2",{id:"loader"},"Loader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Loader()\n")),Object(n.b)("p",null,"Loader representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Loader"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resource")," ",Object(n.b)("em",{parentName:"li"},"Resource")," - resource")),Object(n.b)("h3",{id:"loaderresource"},"loader.resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | resource()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resource")," ",Object(n.b)("em",{parentName:"li"},"Resource")," - resource")),Object(n.b)("h3",{id:"loaderbyte_stream"},"loader.byte","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | byte_stream()\n")),Object(n.b)("p",null,"Resource byte stream"),Object(n.b)("p",null,"The stream is available after opening the loader"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"io.ByteStream")," - resource byte stream")),Object(n.b)("h3",{id:"loadertext_stream"},"loader.text","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | text_stream()\n")),Object(n.b)("p",null,"Resource text stream"),Object(n.b)("p",null,"The stream is available after opening the loader"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"io.TextStream")," - resource text stream")),Object(n.b)("h3",{id:"loaderopen"},"loader.open"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | open()\n")),Object(n.b)("p",null,'Open the loader as "io.open" does'),Object(n.b)("h3",{id:"loaderclose"},"loader.close"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | close()\n")),Object(n.b)("p",null,'Close the loader as "filelike.close" does'),Object(n.b)("h3",{id:"loaderclosed"},"loader.closed"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | closed()\n")),Object(n.b)("p",null,"Whether the loader is closed"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if closed")),Object(n.b)("h3",{id:"loaderread_byte_stream"},"loader.read","_","byte","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_byte_stream()\n")),Object(n.b)("p",null,"Read bytes stream"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"io.ByteStream")," - resource byte stream")),Object(n.b)("h3",{id:"loaderread_byte_stream_create"},"loader.read","_","byte","_","stream","_","create"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_byte_stream_create()\n")),Object(n.b)("p",null,"Create bytes stream"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"io.ByteStream")," - resource byte stream")),Object(n.b)("h3",{id:"loaderread_byte_stream_infer_stats"},"loader.read","_","byte","_","stream","_","infer","_","stats"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_byte_stream_infer_stats(byte_stream)\n")),Object(n.b)("p",null,"Infer byte stream stats"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"byte_stream")," ",Object(n.b)("em",{parentName:"li"},"io.ByteStream")," - resource byte stream")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"io.ByteStream")," - resource byte stream")),Object(n.b)("h3",{id:"loaderread_byte_stream_decompress"},"loader.read","_","byte","_","stream","_","decompress"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_byte_stream_decompress(byte_stream)\n")),Object(n.b)("p",null,"Decompress byte stream"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"byte_stream")," ",Object(n.b)("em",{parentName:"li"},"io.ByteStream")," - resource byte stream")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"io.ByteStream")," - resource byte stream")),Object(n.b)("h3",{id:"loaderread_text_stream"},"loader.read","_","text","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_text_stream()\n")),Object(n.b)("p",null,"Read text stream"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"io.TextStream")," - resource text stream")),Object(n.b)("h3",{id:"loaderread_text_stream_infer_encoding"},"loader.read","_","text","_","stream","_","infer","_","encoding"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_text_stream_infer_encoding(byte_stream)\n")),Object(n.b)("p",null,"Infer text stream encoding"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"byte_stream")," ",Object(n.b)("em",{parentName:"li"},"io.ByteStream")," - resource byte stream")),Object(n.b)("h3",{id:"loaderread_text_stream_decode"},"loader.read","_","text","_","stream","_","decode"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_text_stream_decode(byte_stream)\n")),Object(n.b)("p",null,"Decode text stream"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"byte_stream")," ",Object(n.b)("em",{parentName:"li"},"io.ByteStream")," - resource byte stream")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"text_stream")," ",Object(n.b)("em",{parentName:"li"},"io.TextStream")," - resource text stream")),Object(n.b)("h3",{id:"loaderwrite_byte_stream"},"loader.write","_","byte","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | write_byte_stream(path)\n")),Object(n.b)("p",null,"Write from a temporary file"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"path")," ",Object(n.b)("em",{parentName:"li"},"str")," - path to a temporary file")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any")," - result of writing e.g. resulting path")),Object(n.b)("h3",{id:"loaderwrite_byte_stream_create"},"loader.write","_","byte","_","stream","_","create"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | write_byte_stream_create(path)\n")),Object(n.b)("p",null,"Create byte stream for writing"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"path")," ",Object(n.b)("em",{parentName:"li"},"str")," - path to a temporary file")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"io.ByteStream")," - byte stream")),Object(n.b)("h3",{id:"loaderwrite_byte_stream_save"},"loader.write","_","byte","_","stream","_","save"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | write_byte_stream_save(byte_stream)\n")),Object(n.b)("p",null,"Store byte stream"),Object(n.b)("h2",{id:"localcontrol"},"LocalControl"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class LocalControl(Control)\n")),Object(n.b)("p",null,"Local control representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.local import LocalControl"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"localloader"},"LocalLoader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class LocalLoader(Loader)\n")),Object(n.b)("p",null,"Local loader implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.local import LocalLoader"))))),Object(n.b)("h2",{id:"localplugin"},"LocalPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class LocalPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Local Data"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.local import LocalPlugin"))))),Object(n.b)("h2",{id:"metadata"},"Metadata"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Metadata(helpers.ControlledDict)\n")),Object(n.b)("p",null,"Metadata representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Metadata"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - metadata descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"metadatasetinitial"},"metadata.setinitial"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | setinitial(key, value)\n")),Object(n.b)("p",null,"Set an initial item in a subclass' constructor"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"key")," ",Object(n.b)("em",{parentName:"li"},"str")," - key"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"value")," ",Object(n.b)("em",{parentName:"li"},"any")," - value")),Object(n.b)("h3",{id:"metadatato_copy"},"metadata.to","_","copy"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_copy()\n")),Object(n.b)("p",null,"Create a copy of the metadata"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Metadata")," - a copy of the metadata")),Object(n.b)("h3",{id:"metadatato_dict"},"metadata.to","_","dict"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_dict()\n")),Object(n.b)("p",null,"Convert metadata to a dict"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - metadata as a dict")),Object(n.b)("h3",{id:"metadatato_json"},"metadata.to","_","json"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_json(path=None, encoder_class=None)\n")),Object(n.b)("p",null,"Save metadata as a json"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"path")," ",Object(n.b)("em",{parentName:"li"},"str")," - target path")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - on any error")),Object(n.b)("h3",{id:"metadatato_yaml"},"metadata.to","_","yaml"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_yaml(path=None)\n")),Object(n.b)("p",null,"Save metadata as a yaml"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"path")," ",Object(n.b)("em",{parentName:"li"},"str")," - target path")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - on any error")),Object(n.b)("h3",{id:"metadatametadata_valid"},"metadata.metadata","_","valid"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | metadata_valid()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - whether the metadata is valid")),Object(n.b)("h3",{id:"metadatametadata_errors"},"metadata.metadata","_","errors"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | metadata_errors()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Errors[]")," - a list of the metadata errors")),Object(n.b)("h3",{id:"metadatametadata_attach"},"metadata.metadata","_","attach"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | metadata_attach(name, value)\n")),Object(n.b)("p",null,"Helper method for attaching a value to  the metadata"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"value")," ",Object(n.b)("em",{parentName:"li"},"any")," - value")),Object(n.b)("h3",{id:"metadatametadata_extract"},"metadata.metadata","_","extract"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | metadata_extract(descriptor)\n")),Object(n.b)("p",null,"Helper method called during the metadata extraction"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"any")," - descriptor")),Object(n.b)("h3",{id:"metadatametadata_process"},"metadata.metadata","_","process"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | metadata_process()\n")),Object(n.b)("p",null,"Helper method called on any metadata change"),Object(n.b)("h3",{id:"metadatametadata_validate"},"metadata.metadata","_","validate"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | metadata_validate(profile=None)\n")),Object(n.b)("p",null,"Helper method called on any metadata change"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"profile")," ",Object(n.b)("em",{parentName:"li"},"dict")," - a profile to validate against of")),Object(n.b)("h3",{id:"metadataproperty"},"metadata.property"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | property(func=None, *, cache=True, reset=True, write=True)\n")),Object(n.b)("p",null,"Create a metadata property"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"func")," ",Object(n.b)("em",{parentName:"li"},"func")," - method"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cache?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - cache"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"reset?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - reset"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"write?")," ",Object(n.b)("em",{parentName:"li"},"func")," - write")),Object(n.b)("h2",{id:"multipartcontrol"},"MultipartControl"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class MultipartControl(Control)\n")),Object(n.b)("p",null,"Multipart control representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.multipart import MultipartControl"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"multipartcontrolexpand"},"multipartControl.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h2",{id:"multipartloader"},"MultipartLoader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class MultipartLoader(Loader)\n")),Object(n.b)("p",null,"Multipart loader implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.multipart import MultipartLoader"))))),Object(n.b)("h2",{id:"multipartplugin"},"MultipartPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class MultipartPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Multipart Data"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.multipart import MultipartPlugin"))))),Object(n.b)("h2",{id:"numbertype"},"NumberType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class NumberType(Type)\n")),Object(n.b)("p",null,"Number type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"objecttype"},"ObjectType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class ObjectType(Type)\n")),Object(n.b)("p",null,"Object type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"odsdialect"},"OdsDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class OdsDialect(Dialect)\n")),Object(n.b)("p",null,"Ods dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.ods import OdsDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"sheet?")," ",Object(n.b)("em",{parentName:"li"},"str")," - sheet")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"odsdialectsheet"},"odsDialect.sheet"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | sheet()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int|str")," - sheet")),Object(n.b)("h3",{id:"odsdialectexpand"},"odsDialect.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h2",{id:"odsparser"},"OdsParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class OdsParser(Parser)\n")),Object(n.b)("p",null,"ODS parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.ods import OdsParser"))))),Object(n.b)("h2",{id:"odsplugin"},"OdsPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class OdsPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for ODS"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.ods import OdsPlugin"))))),Object(n.b)("h2",{id:"package"},"Package"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Package(Metadata)\n")),Object(n.b)("p",null,"Package representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Package"))))),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"package = Package(resources=[Resource(path=\"data/table.csv\")])\npackage.get_resoure('table').read_rows() == [\n    {'id': 1, 'name': 'english'},\n    {'id': 2, 'name': '\u4e2d\u56fd\u4eba'},\n]\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - package descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resources?")," ",Object(n.b)("em",{parentName:"li"},"dict|Resource[]")," - list of resource descriptors"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name?")," ",Object(n.b)("em",{parentName:"li"},"str")," - package name (for machines)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"id?")," ",Object(n.b)("em",{parentName:"li"},"str")," - package id (for machines)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"licenses?")," ",Object(n.b)("em",{parentName:"li"},"dict[]")," - package licenses"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"profile?")," ",Object(n.b)("em",{parentName:"li"},"str")," - profile name like 'data-package'"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"title?")," ",Object(n.b)("em",{parentName:"li"},"str")," - package title (for humans)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"description?")," ",Object(n.b)("em",{parentName:"li"},"str")," - package description"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"homepage?")," ",Object(n.b)("em",{parentName:"li"},"str")," - package homepage"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"version?")," ",Object(n.b)("em",{parentName:"li"},"str")," - package version"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"sources?")," ",Object(n.b)("em",{parentName:"li"},"dict[]")," - package sources"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"contributors?")," ",Object(n.b)("em",{parentName:"li"},"dict[]")," - package contributors"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"keywords?")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - package keywords"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"image?")," ",Object(n.b)("em",{parentName:"li"},"str")," - package image"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"created?")," ",Object(n.b)("em",{parentName:"li"},"str")," - package created"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"hashing?")," ",Object(n.b)("em",{parentName:"li"},"str")," - a hashing algorithm for resources"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"basepath?")," ",Object(n.b)("em",{parentName:"li"},"str")," - a basepath of the package"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"onerror?")," ",Object(n.b)("em",{parentName:"li"},"ignore|warn|raise")," - behaviour if there is an error"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"trusted?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - don't raise an exception on unsafe paths")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"packagename"},"package.name"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | name()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - package name")),Object(n.b)("h3",{id:"packageid"},"package.id"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | id()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - package id")),Object(n.b)("h3",{id:"packagelicenses"},"package.licenses"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | licenses()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict?")," - package licenses")),Object(n.b)("h3",{id:"packageprofile"},"package.profile"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | profile()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - package profile")),Object(n.b)("h3",{id:"packagetitle"},"package.title"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | title()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - package title")),Object(n.b)("h3",{id:"packagedescription"},"package.description"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | description()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - package description")),Object(n.b)("h3",{id:"packagehomepage"},"package.homepage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | homepage()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - package homepage")),Object(n.b)("h3",{id:"packageversion"},"package.version"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | version()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - package version")),Object(n.b)("h3",{id:"packagesources"},"package.sources"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | sources()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict[]?")," - package sources")),Object(n.b)("h3",{id:"packagecontributors"},"package.contributors"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | contributors()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict[]?")," - package contributors")),Object(n.b)("h3",{id:"packagekeywords"},"package.keywords"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | keywords()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]?")," - package keywords")),Object(n.b)("h3",{id:"packageimage"},"package.image"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | image()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - package image")),Object(n.b)("h3",{id:"packagecreated"},"package.created"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | created()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str?")," - package created")),Object(n.b)("h3",{id:"packagehashing"},"package.hashing"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | hashing()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - package hashing")),Object(n.b)("h3",{id:"packagebasepath"},"package.basepath"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | basepath()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - package basepath")),Object(n.b)("h3",{id:"packageonerror"},"package.onerror"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | onerror()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ignore|warn|raise")," - on error bahaviour")),Object(n.b)("h3",{id:"packagetrusted"},"package.trusted"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | trusted()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - package trusted")),Object(n.b)("h3",{id:"packageresources"},"package.resources"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | resources()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Resources[]")," - package resource")),Object(n.b)("h3",{id:"packageresource_names"},"package.resource","_","names"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | resource_names()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - package resource names")),Object(n.b)("h3",{id:"packageadd_resource"},"package.add","_","resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | add_resource(descriptor)\n")),Object(n.b)("p",null,"Add new resource to package."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - resource descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Resource/None")," - added ",Object(n.b)("inlineCode",{parentName:"li"},"Resource")," instance or ",Object(n.b)("inlineCode",{parentName:"li"},"None")," if not added")),Object(n.b)("h3",{id:"packageget_resource"},"package.get","_","resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | get_resource(name)\n")),Object(n.b)("p",null,"Get resource by name."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource name")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - if resource is not found")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Resource/None")," - ",Object(n.b)("inlineCode",{parentName:"li"},"Resource")," instance or ",Object(n.b)("inlineCode",{parentName:"li"},"None")," if not found")),Object(n.b)("h3",{id:"packagehas_resource"},"package.has","_","resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | has_resource(name)\n")),Object(n.b)("p",null,"Check if a resource is present"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - schema resource name")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - whether there is the resource")),Object(n.b)("h3",{id:"packageremove_resource"},"package.remove","_","resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | remove_resource(name)\n")),Object(n.b)("p",null,"Remove resource by name."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource name")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - if resource is not found")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Resource/None")," - removed ",Object(n.b)("inlineCode",{parentName:"li"},"Resource")," instances or ",Object(n.b)("inlineCode",{parentName:"li"},"None")," if not found")),Object(n.b)("h3",{id:"packageexpand"},"package.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("p",null,"It will add default values to the package."),Object(n.b)("h3",{id:"packageinfer"},"package.infer"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | infer(*, stats=False)\n")),Object(n.b)("p",null,"Infer package's attributes"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"stats?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - stream files completely and infer stats")),Object(n.b)("h3",{id:"packagefrom_zip"},"package.from","_","zip"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_zip(path, **options)\n")),Object(n.b)("p",null,"Create a package from ZIP"),Object(n.b)("h3",{id:"packagefrom_storage"},"package.from","_","storage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_storage(storage)\n")),Object(n.b)("p",null,"Import package from storage"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"storage")," ",Object(n.b)("em",{parentName:"li"},"Storage")," - storage instance")),Object(n.b)("h3",{id:"packagefrom_ckan"},"package.from","_","ckan"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_ckan(*, url, dataset, apikey=None)\n")),Object(n.b)("p",null,"Import package from CKAN"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url")," ",Object(n.b)("em",{parentName:"li"},"string"),' - CKAN instance url e.g. "',Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://demo.ckan.org%22"}),'https://demo.ckan.org"')),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset")," ",Object(n.b)("em",{parentName:"li"},"string"),' - dataset id in CKAN e.g. "my-dataset"'),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"apikey?")," ",Object(n.b)("em",{parentName:"li"},"str"),' - API key for CKAN e.g. "51912f57-a657-4caa-b2a7-0a1c16821f4b"')),Object(n.b)("h3",{id:"packagefrom_sql"},"package.from","_","sql"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),' | @staticmethod\n | from_sql(*, url=None, engine=None, prefix="", namespace=None)\n')),Object(n.b)("p",null,"Import package from SQL"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url?")," ",Object(n.b)("em",{parentName:"li"},"string")," - SQL connection string"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"engine?")," ",Object(n.b)("em",{parentName:"li"},"object")," - ",Object(n.b)("inlineCode",{parentName:"li"},"sqlalchemy")," engine"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all tables"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"namespace?")," ",Object(n.b)("em",{parentName:"li"},"str")," - SQL scheme")),Object(n.b)("h3",{id:"packagefrom_pandas"},"package.from","_","pandas"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_pandas(*, dataframes)\n")),Object(n.b)("p",null,"Import package from Pandas dataframes"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataframes")," ",Object(n.b)("em",{parentName:"li"},"dict")," - mapping of Pandas dataframes")),Object(n.b)("h3",{id:"packagefrom_spss"},"package.from","_","spss"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_spss(*, basepath)\n")),Object(n.b)("p",null,"Import package from SPSS directory"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"basepath")," ",Object(n.b)("em",{parentName:"li"},"str")," - SPSS dir path")),Object(n.b)("h3",{id:"packagefrom_bigquery"},"package.from","_","bigquery"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),' | @staticmethod\n | from_bigquery(*, service, project, dataset, prefix="")\n')),Object(n.b)("p",null,"Import package from Bigquery"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"service")," ",Object(n.b)("em",{parentName:"li"},"object")," - BigQuery ",Object(n.b)("inlineCode",{parentName:"li"},"Service")," object"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"project")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery project name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery dataset name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all names")),Object(n.b)("h3",{id:"packageto_copy"},"package.to","_","copy"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_copy()\n")),Object(n.b)("p",null,"Create a copy of the package"),Object(n.b)("h3",{id:"packageto_zip"},"package.to","_","zip"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_zip(path, *, resolve=[], encoder_class=None)\n")),Object(n.b)("p",null,"Save package to a zip"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"path")," ",Object(n.b)("em",{parentName:"li"},"str")," - target path"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resolve")," ",Object(n.b)("em",{parentName:"li"},"str[]"),' - Data sources to resolve.\nFor "memory" data it means saving them as CSV and including into ZIP.\nFor "remote" data it means downloading them and including into ZIP.\nFor example, ',Object(n.b)("inlineCode",{parentName:"li"},'resolve=["memory", "remote"]')),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"encoder_class")," ",Object(n.b)("em",{parentName:"li"},"object")," - json encoder class")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - on any error")),Object(n.b)("h3",{id:"packageto_storage"},"package.to","_","storage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_storage(storage, *, force=False)\n")),Object(n.b)("p",null,"Export package to storage"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"storage")," ",Object(n.b)("em",{parentName:"li"},"Storage")," - storage instance"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - overwrite existent")),Object(n.b)("h3",{id:"packageto_ckan"},"package.to","_","ckan"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_ckan(*, url, dataset, apikey=None, force=False)\n")),Object(n.b)("p",null,"Export package to CKAN"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url")," ",Object(n.b)("em",{parentName:"li"},"string"),' - CKAN instance url e.g. "',Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://demo.ckan.org%22"}),'https://demo.ckan.org"')),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset")," ",Object(n.b)("em",{parentName:"li"},"string"),' - dataset id in CKAN e.g. "my-dataset"'),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"apikey?")," ",Object(n.b)("em",{parentName:"li"},"str"),' - API key for CKAN e.g. "51912f57-a657-4caa-b2a7-0a1c16821f4b"'),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - (optional) overwrite existing data")),Object(n.b)("h3",{id:"packageto_sql"},"package.to","_","sql"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),' | to_sql(*, url=None, engine=None, prefix="", namespace=None, force=False)\n')),Object(n.b)("p",null,"Export package to SQL"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url?")," ",Object(n.b)("em",{parentName:"li"},"string")," - SQL connection string"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"engine?")," ",Object(n.b)("em",{parentName:"li"},"object")," - ",Object(n.b)("inlineCode",{parentName:"li"},"sqlalchemy")," engine"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all tables"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"namespace?")," ",Object(n.b)("em",{parentName:"li"},"str")," - SQL scheme"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - overwrite existent")),Object(n.b)("h3",{id:"packageto_pandas"},"package.to","_","pandas"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_pandas()\n")),Object(n.b)("p",null,"Export package to Pandas dataframes"),Object(n.b)("h3",{id:"packageto_spss"},"package.to","_","spss"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_spss(*, basepath, force=False)\n")),Object(n.b)("p",null,"Export package to SPSS directory"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"basepath")," ",Object(n.b)("em",{parentName:"li"},"str")," - SPSS dir path"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - overwrite existent")),Object(n.b)("h3",{id:"packageto_bigquery"},"package.to","_","bigquery"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),' | to_bigquery(*, service, project, dataset, prefix="", force=False)\n')),Object(n.b)("p",null,"Export package to Bigquery"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"service")," ",Object(n.b)("em",{parentName:"li"},"object")," - BigQuery ",Object(n.b)("inlineCode",{parentName:"li"},"Service")," object"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"project")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery project name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery dataset name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all names"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - overwrite existent")),Object(n.b)("h2",{id:"pandasdialect"},"PandasDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class PandasDialect(Dialect)\n")),Object(n.b)("p",null,"Pandas dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.pandas import PandasDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"pandasparser"},"PandasParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class PandasParser(Parser)\n")),Object(n.b)("p",null,"Pandas parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.pandas import PandasParser"))))),Object(n.b)("h2",{id:"pandasplugin"},"PandasPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class PandasPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Pandas"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.pandas import PandasPlugin"))))),Object(n.b)("h2",{id:"pandasstorage"},"PandasStorage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class PandasStorage(Storage)\n")),Object(n.b)("p",null,"Pandas storage implementation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.pandas import PandasStorage"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataframes?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - dictionary of Pandas dataframes")),Object(n.b)("h2",{id:"parser"},"Parser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Parser()\n")),Object(n.b)("p",null,"Parser representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Parser"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resource")," ",Object(n.b)("em",{parentName:"li"},"Resource")," - resource")),Object(n.b)("h3",{id:"parserresource"},"parser.resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | resource()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Resource")," - resource")),Object(n.b)("h3",{id:"parserloader"},"parser.loader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | loader()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Loader")," - loader")),Object(n.b)("h3",{id:"parserdata_stream"},"parser.data","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | data_stream()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any[][]")," - data stream")),Object(n.b)("h3",{id:"parseropen"},"parser.open"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | open()\n")),Object(n.b)("p",null,'Open the parser as "io.open" does'),Object(n.b)("h3",{id:"parserclose"},"parser.close"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | close()\n")),Object(n.b)("p",null,'Close the parser as "filelike.close" does'),Object(n.b)("h3",{id:"parserclosed"},"parser.closed"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | closed()\n")),Object(n.b)("p",null,"Whether the parser is closed"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if closed")),Object(n.b)("h3",{id:"parserread_loader"},"parser.read","_","loader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_loader()\n")),Object(n.b)("p",null,"Create and open loader"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Loader")," - loader")),Object(n.b)("h3",{id:"parserread_data_stream"},"parser.read","_","data","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_data_stream()\n")),Object(n.b)("p",null,"Read data stream"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"gen<any[][]>")," - data stream")),Object(n.b)("h3",{id:"parserread_data_stream_create"},"parser.read","_","data","_","stream","_","create"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_data_stream_create(loader)\n")),Object(n.b)("p",null,"Create data stream from loader"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"loader")," ",Object(n.b)("em",{parentName:"li"},"Loader")," - loader")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"gen<any[][]>")," - data stream")),Object(n.b)("h3",{id:"parserread_data_stream_handle_errors"},"parser.read","_","data","_","stream","_","handle","_","errors"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_data_stream_handle_errors(data_stream)\n")),Object(n.b)("p",null,"Wrap data stream into error handler"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"gen<any[][]>")," - data stream")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"gen<any[][]>")," - data stream")),Object(n.b)("h3",{id:"parserwrite_row_stream"},"parser.write","_","row","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | write_row_stream(read_row_stream)\n")),Object(n.b)("p",null,"Write row stream into the resource"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"read_row_stream")," ",Object(n.b)("em",{parentName:"li"},"gen<Row[]>")," - row stream factory")),Object(n.b)("h2",{id:"pipeline"},"Pipeline"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Pipeline(Metadata)\n")),Object(n.b)("p",null,"Pipeline representation."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - pipeline descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"pipelinetasks"},"pipeline.tasks"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | tasks()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict[]")," - tasks")),Object(n.b)("h3",{id:"pipelinerun"},"pipeline.run"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | run(*, parallel=False)\n")),Object(n.b)("p",null,"Run the pipeline"),Object(n.b)("h2",{id:"pipelinetask"},"PipelineTask"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class PipelineTask(Metadata)\n")),Object(n.b)("p",null,"Pipeline task representation."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - pipeline task descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"pipelinetaskrun"},"pipelineTask.run"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | run()\n")),Object(n.b)("p",null,"Run the task"),Object(n.b)("h2",{id:"plugin"},"Plugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Plugin()\n")),Object(n.b)("p",null,"Plugin representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Plugin"))))),Object(n.b)("p",null,"It's an interface for writing Frictionless plugins.\nYou can implement one or more methods to hook into Frictionless system."),Object(n.b)("h3",{id:"plugincreate_check"},"plugin.create","_","check"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_check(name, *, descriptor=None)\n")),Object(n.b)("p",null,"Create checks"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - check name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - check descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Check")," - check")),Object(n.b)("h3",{id:"plugincreate_control"},"plugin.create","_","control"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_control(file, *, descriptor)\n")),Object(n.b)("p",null,"Create control"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"file")," ",Object(n.b)("em",{parentName:"li"},"File")," - control file"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - control descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Control")," - control")),Object(n.b)("h3",{id:"plugincreate_dialect"},"plugin.create","_","dialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_dialect(file, *, descriptor)\n")),Object(n.b)("p",null,"Create dialect"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"file")," ",Object(n.b)("em",{parentName:"li"},"File")," - dialect file"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - dialect descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Dialect")," - dialect")),Object(n.b)("h3",{id:"plugincreate_loader"},"plugin.create","_","loader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_loader(file)\n")),Object(n.b)("p",null,"Create loader"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"file")," ",Object(n.b)("em",{parentName:"li"},"File")," - loader file")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Loader")," - loader")),Object(n.b)("h3",{id:"plugincreate_parser"},"plugin.create","_","parser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_parser(file)\n")),Object(n.b)("p",null,"Create parser"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"file")," ",Object(n.b)("em",{parentName:"li"},"File")," - parser file")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Parser")," - parser")),Object(n.b)("h3",{id:"plugincreate_server"},"plugin.create","_","server"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_server(name)\n")),Object(n.b)("p",null,"Create server"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - server name")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Server")," - server")),Object(n.b)("h2",{id:"remotecontrol"},"RemoteControl"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class RemoteControl(Control)\n")),Object(n.b)("p",null,"Remote control representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.remote import RemoteControl"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"http_session?")," ",Object(n.b)("em",{parentName:"li"},"requests.Session")," - user defined HTTP session"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"http_preload?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - don't use HTTP streaming and preload all the data"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"http_timeout?")," ",Object(n.b)("em",{parentName:"li"},"int")," - user defined HTTP timeout in minutes")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"remotecontrolhttp_session"},"remoteControl.http","_","session"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | http_session()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"requests.Session")," - HTTP session")),Object(n.b)("h3",{id:"remotecontrolhttp_preload"},"remoteControl.http","_","preload"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | http_preload()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if not streaming")),Object(n.b)("h3",{id:"remotecontrolhttp_timeout"},"remoteControl.http","_","timeout"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | http_timeout()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int")," - HTTP timeout in minutes")),Object(n.b)("h3",{id:"remotecontrolexpand"},"remoteControl.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h2",{id:"remoteloader"},"RemoteLoader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class RemoteLoader(Loader)\n")),Object(n.b)("p",null,"Remote loader implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.remote import RemoteLoader"))))),Object(n.b)("h2",{id:"remoteplugin"},"RemotePlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class RemotePlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Remote Data"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.remote import RemotePlugin"))))),Object(n.b)("h2",{id:"report"},"Report"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Report(Metadata)\n")),Object(n.b)("p",null,"Report representation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Report"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - report descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"time")," ",Object(n.b)("em",{parentName:"li"},"float")," - validation time"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"errors")," ",Object(n.b)("em",{parentName:"li"},"Error[]")," - validation errors"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"tasks")," ",Object(n.b)("em",{parentName:"li"},"ReportTask[]")," - validation tasks")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"reportversion"},"report.version"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | version()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - frictionless version")),Object(n.b)("h3",{id:"reporttime"},"report.time"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | time()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"float")," - validation time")),Object(n.b)("h3",{id:"reportvalid"},"report.valid"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | valid()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - validation result")),Object(n.b)("h3",{id:"reportstats"},"report.stats"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | stats()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - validation stats")),Object(n.b)("h3",{id:"reporterrors"},"report.errors"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | errors()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error[]")," - validation errors")),Object(n.b)("h3",{id:"reporttasks"},"report.tasks"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | tasks()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ReportTask[]")," - validation tasks")),Object(n.b)("h3",{id:"reporttask"},"report.task"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | task()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ReportTask")," - validation task (if there is only one)")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - if there are more that 1 task")),Object(n.b)("h3",{id:"reportexpand"},"report.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h3",{id:"reportflatten"},"report.flatten"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | flatten(spec)\n")),Object(n.b)("p",null,"Flatten the report"),Object(n.b)("p",null,"Parameters\nspec (any[]): flatten specification"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any[]")," - flatten report")),Object(n.b)("h3",{id:"reportfrom_validate"},"report.from","_","validate"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_validate(validate)\n")),Object(n.b)("p",null,"Validate function wrapper"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"validate")," ",Object(n.b)("em",{parentName:"li"},"func")," - validate")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"func")," - wrapped validate")),Object(n.b)("h2",{id:"reporttask-1"},"ReportTask"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class ReportTask(Metadata)\n")),Object(n.b)("p",null,"Report task representation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import ReportTask"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"descriptor?")," ",Object(n.b)("em",{parentName:"p"},"str|dict")," - schema descriptor")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"time")," ",Object(n.b)("em",{parentName:"p"},"float")," - validation time")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"scope")," ",Object(n.b)("em",{parentName:"p"},"str[]")," - validation scope")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"partial")," ",Object(n.b)("em",{parentName:"p"},"bool")," - wehter validation was partial")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"errors")," ",Object(n.b)("em",{parentName:"p"},"Error[]")," - validation errors")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"task")," ",Object(n.b)("em",{parentName:"p"},"Task")," - validation task"),Object(n.b)("h1",Object(l.a)({parentName:"li"},{id:"raises-1"}),"Raises")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("inlineCode",{parentName:"p"},"FrictionlessException")," - raise any error that occurs during the process"))),Object(n.b)("h3",{id:"reporttaskresource"},"reportTask.resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | resource()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Resource")," - resource")),Object(n.b)("h3",{id:"reporttasktime"},"reportTask.time"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | time()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"float")," - validation time")),Object(n.b)("h3",{id:"reporttaskvalid"},"reportTask.valid"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | valid()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - validation result")),Object(n.b)("h3",{id:"reporttaskscope"},"reportTask.scope"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | scope()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - validation scope")),Object(n.b)("h3",{id:"reporttaskpartial"},"reportTask.partial"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | partial()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if validation partial")),Object(n.b)("h3",{id:"reporttaskstats"},"reportTask.stats"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | stats()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - validation stats")),Object(n.b)("h3",{id:"reporttaskerrors"},"reportTask.errors"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | errors()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error[]")," - validation errors")),Object(n.b)("h3",{id:"reporttaskerror"},"reportTask.error"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | error()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error")," - validation error if there is only one")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - if more than one errors")),Object(n.b)("h3",{id:"reporttaskexpand"},"reportTask.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h3",{id:"reporttaskflatten"},"reportTask.flatten"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | flatten(spec)\n")),Object(n.b)("p",null,"Flatten the report"),Object(n.b)("p",null,"Parameters\nspec (any[]): flatten specification"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any[]")," - flatten task report")),Object(n.b)("h2",{id:"resource"},"Resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Resource(Metadata)\n")),Object(n.b)("p",null,"Resource representation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Resource"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - resource descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name?")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource name (for machines)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"title?")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource title (for humans)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"licenses?")," ",Object(n.b)("em",{parentName:"li"},"dict[]")," - resource licenses"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"sources?")," ",Object(n.b)("em",{parentName:"li"},"dict[]")," - resource sources"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"path?")," ",Object(n.b)("em",{parentName:"li"},"str")," - file path"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"data?")," ",Object(n.b)("em",{parentName:"li"},"any","[][]")," - array or data arrays"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"scheme?")," ",Object(n.b)("em",{parentName:"li"},"str")," - file scheme"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"format?")," ",Object(n.b)("em",{parentName:"li"},"str")," - file format"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"hashing?")," ",Object(n.b)("em",{parentName:"li"},"str")," - file hashing"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"encoding?")," ",Object(n.b)("em",{parentName:"li"},"str")," - file encoding"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"innerpath?")," ",Object(n.b)("em",{parentName:"li"},"str")," - file compression path"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"compression?")," ",Object(n.b)("em",{parentName:"li"},"str")," - file compression"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"control?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - file control"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dialect?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - table dialect"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"layout?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - table layout"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"schema?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - table schema"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"stats?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - table stats"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"profile?")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource profile"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"basepath?")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource basepath"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"onerror?")," ",Object(n.b)("em",{parentName:"li"},"ignore|warn|raise")," - behaviour if there is an error"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"trusted?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - don't raise an exception on unsafe paths"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"package?")," ",Object(n.b)("em",{parentName:"li"},"Package")," - resource package")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"resourcename"},"resource.name"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | name()\n")),Object(n.b)("p",null,"Returns\nstr: resource name"),Object(n.b)("h3",{id:"resourcetitle"},"resource.title"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | title()\n")),Object(n.b)("p",null,"Returns\nstr: resource title"),Object(n.b)("h3",{id:"resourcedescription"},"resource.description"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | description()\n")),Object(n.b)("p",null,"Returns\nstr: resource description"),Object(n.b)("h3",{id:"resourcelicenses"},"resource.licenses"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | licenses()\n")),Object(n.b)("p",null,"Returns\ndict[]: resource licenses"),Object(n.b)("h3",{id:"resourcesources"},"resource.sources"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | sources()\n")),Object(n.b)("p",null,"Returns\ndict[]: resource sources"),Object(n.b)("h3",{id:"resourceprofile"},"resource.profile"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | profile()\n")),Object(n.b)("p",null,"Returns\nstr?: resource profile"),Object(n.b)("h3",{id:"resourcepath"},"resource.path"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | path()\n")),Object(n.b)("p",null,"Returns\nstr?: resource path"),Object(n.b)("h3",{id:"resourcedata"},"resource.data"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | data()\n")),Object(n.b)("p",null,"Returns\nany","[][]","?: resource data"),Object(n.b)("h3",{id:"resourcescheme"},"resource.scheme"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | scheme()\n")),Object(n.b)("p",null,"Returns\nstr?: resource scheme"),Object(n.b)("h3",{id:"resourceformat"},"resource.format"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | format()\n")),Object(n.b)("p",null,"Returns\nstr?: resource format"),Object(n.b)("h3",{id:"resourcehashing"},"resource.hashing"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | hashing()\n")),Object(n.b)("p",null,"Returns\nstr?: resource hashing"),Object(n.b)("h3",{id:"resourceencoding"},"resource.encoding"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | encoding()\n")),Object(n.b)("p",null,"Returns\nstr?: resource encoding"),Object(n.b)("h3",{id:"resourceinnerpath"},"resource.innerpath"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | innerpath()\n")),Object(n.b)("p",null,"Returns\nstr?: resource compression path"),Object(n.b)("h3",{id:"resourcecompression"},"resource.compression"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | compression()\n")),Object(n.b)("p",null,"Returns\nstr?: resource compression"),Object(n.b)("h3",{id:"resourcecontrol"},"resource.control"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | control()\n")),Object(n.b)("p",null,"Returns\nControl?: resource control"),Object(n.b)("h3",{id:"resourcedialect"},"resource.dialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | dialect()\n")),Object(n.b)("p",null,"Returns\nDialect?: resource dialect"),Object(n.b)("h3",{id:"resourcelayout"},"resource.layout"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | layout()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Layout?")," - table layout")),Object(n.b)("h3",{id:"resourceschema"},"resource.schema"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | schema()\n")),Object(n.b)("p",null,"Returns\nSchema: resource schema"),Object(n.b)("h3",{id:"resourcesample"},"resource.sample"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | sample()\n")),Object(n.b)("p",null,"Tables's rows used as sample."),Object(n.b)("p",null,"These sample rows are used internally to infer characteristics of the\nsource file (e.g. schema, ...)."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"list[]?")," - table sample")),Object(n.b)("h3",{id:"resourceheader"},"resource.header"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | header()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]?")," - table header")),Object(n.b)("h3",{id:"resourcelookup"},"resource.lookup"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | lookup()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any?")," - table lookup")),Object(n.b)("h3",{id:"resourcestats"},"resource.stats"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | stats()\n")),Object(n.b)("p",null,"Returns\ndict?: resource stats"),Object(n.b)("h3",{id:"resourcebasepath"},"resource.basepath"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | basepath()\n")),Object(n.b)("p",null,"Returns\nstr: resource basepath"),Object(n.b)("h3",{id:"resourcefullpath"},"resource.fullpath"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | fullpath()\n")),Object(n.b)("p",null,"Returns\nstr: resource fullpath"),Object(n.b)("h3",{id:"resourceonerror"},"resource.onerror"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | onerror()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ignore|warn|raise")," - on error bahaviour")),Object(n.b)("h3",{id:"resourcetrusted"},"resource.trusted"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | trusted()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - don't raise an exception on unsafe paths")),Object(n.b)("h3",{id:"resourcepackage"},"resource.package"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | package()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Package?")," - parent package")),Object(n.b)("h3",{id:"resourcememory"},"resource.memory"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | memory()\n")),Object(n.b)("p",null,"Returns\nbool: if resource is memory"),Object(n.b)("h3",{id:"resourceremote"},"resource.remote"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | remote()\n")),Object(n.b)("p",null,"Returns\nbool: if resource is remote"),Object(n.b)("h3",{id:"resourcemultipart"},"resource.multipart"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | multipart()\n")),Object(n.b)("p",null,"Returns\nbool: if resource is multipart"),Object(n.b)("h3",{id:"resourcetabular"},"resource.tabular"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(write=False)\n | tabular()\n")),Object(n.b)("p",null,"Returns\nbool: if resource is tabular"),Object(n.b)("h3",{id:"resourcebyte_stream"},"resource.byte","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | byte_stream()\n")),Object(n.b)("p",null,"Byte stream in form of a generator"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"gen<bytes>?")," - byte stream")),Object(n.b)("h3",{id:"resourcetext_stream"},"resource.text","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | text_stream()\n")),Object(n.b)("p",null,"Text stream in form of a generator"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"gen<str[]>?")," - data stream")),Object(n.b)("h3",{id:"resourcedata_stream"},"resource.data","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | data_stream()\n")),Object(n.b)("p",null,"Data stream in form of a generator"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"gen<any[][]>?")," - data stream")),Object(n.b)("h3",{id:"resourcerow_stream"},"resource.row","_","stream"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | row_stream()\n")),Object(n.b)("p",null,"Row stream in form of a generator of Row objects"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Yields"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"gen<Row[]>?")," - row stream")),Object(n.b)("h3",{id:"resourceexpand"},"resource.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h3",{id:"resourceinfer"},"resource.infer"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | infer(*, stats=False)\n")),Object(n.b)("p",null,"Infer metadata"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"stats?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - stream file completely and infer stats")),Object(n.b)("h3",{id:"resourceopen"},"resource.open"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | open()\n")),Object(n.b)("p",null,'Open the resource as "io.open" does'),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - any exception that occurs")),Object(n.b)("h3",{id:"resourceclose"},"resource.close"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | close()\n")),Object(n.b)("p",null,'Close the table as "filelike.close" does'),Object(n.b)("h3",{id:"resourceclosed"},"resource.closed"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | closed()\n")),Object(n.b)("p",null,"Whether the table is closed"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if closed")),Object(n.b)("h3",{id:"resourceread_bytes"},"resource.read","_","bytes"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_bytes()\n")),Object(n.b)("p",null,"Read data into memory"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any[][]")," - table data")),Object(n.b)("h3",{id:"resourceread_text"},"resource.read","_","text"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_text()\n")),Object(n.b)("p",null,"Read text into memory"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - table data")),Object(n.b)("h3",{id:"resourceread_data"},"resource.read","_","data"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_data()\n")),Object(n.b)("p",null,"Read data into memory"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any[][]")," - table data")),Object(n.b)("h3",{id:"resourceread_rows"},"resource.read","_","rows"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_rows()\n")),Object(n.b)("p",null,"Read rows into memory"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Row[]")," - table rows")),Object(n.b)("h3",{id:"resourcewrite"},"resource.write"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | write(target)\n")),Object(n.b)("p",null,"Write this resource to the target resource"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"target")," ",Object(n.b)("em",{parentName:"li"},"Resource")," - target Resource")),Object(n.b)("h3",{id:"resourcefrom_petl"},"resource.from","_","petl"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_petl(storage, *, view, **options)\n")),Object(n.b)("p",null,"Create a resource from PETL container"),Object(n.b)("h3",{id:"resourcefrom_storage"},"resource.from","_","storage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_storage(storage, *, name)\n")),Object(n.b)("p",null,"Import resource from storage"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"storage")," ",Object(n.b)("em",{parentName:"li"},"Storage")," - storage instance"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource name")),Object(n.b)("h3",{id:"resourcefrom_ckan"},"resource.from","_","ckan"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_ckan(*, name, url, dataset, apikey=None)\n")),Object(n.b)("p",null,"Import resource from CKAN"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"string")," - resource name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url")," ",Object(n.b)("em",{parentName:"li"},"string"),' - CKAN instance url e.g. "',Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://demo.ckan.org%22"}),'https://demo.ckan.org"')),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset")," ",Object(n.b)("em",{parentName:"li"},"string"),' - dataset id in CKAN e.g. "my-dataset"'),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"apikey?")," ",Object(n.b)("em",{parentName:"li"},"str"),' - API key for CKAN e.g. "51912f57-a657-4caa-b2a7-0a1c16821f4b"')),Object(n.b)("h3",{id:"resourcefrom_sql"},"resource.from","_","sql"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),' | @staticmethod\n | from_sql(*, name, url=None, engine=None, prefix="", namespace=None)\n')),Object(n.b)("p",null,"Import resource from SQL table"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url?")," ",Object(n.b)("em",{parentName:"li"},"string")," - SQL connection string"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"engine?")," ",Object(n.b)("em",{parentName:"li"},"object")," - ",Object(n.b)("inlineCode",{parentName:"li"},"sqlalchemy")," engine"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all tables"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"namespace?")," ",Object(n.b)("em",{parentName:"li"},"str")," - SQL scheme")),Object(n.b)("h3",{id:"resourcefrom_pandas"},"resource.from","_","pandas"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_pandas(dataframe)\n")),Object(n.b)("p",null,"Import resource from Pandas dataframe"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataframe")," ",Object(n.b)("em",{parentName:"li"},"str")," - padas dataframe")),Object(n.b)("h3",{id:"resourcefrom_spss"},"resource.from","_","spss"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_spss(*, name, basepath)\n")),Object(n.b)("p",null,"Import resource from SPSS file"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"basepath")," ",Object(n.b)("em",{parentName:"li"},"str")," - SPSS dir path")),Object(n.b)("h3",{id:"resourcefrom_bigquery"},"resource.from","_","bigquery"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),' | @staticmethod\n | from_bigquery(*, name, service, project, dataset, prefix="")\n')),Object(n.b)("p",null,"Import resource from BigQuery table"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - resource name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"service")," ",Object(n.b)("em",{parentName:"li"},"object")," - BigQuery ",Object(n.b)("inlineCode",{parentName:"li"},"Service")," object"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"project")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery project name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery dataset name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all names")),Object(n.b)("h3",{id:"resourceto_copy"},"resource.to","_","copy"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_copy(**options)\n")),Object(n.b)("p",null,"Create a copy of the resource"),Object(n.b)("h3",{id:"resourceto_storage"},"resource.to","_","storage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_storage(storage, *, force=False)\n")),Object(n.b)("p",null,"Export resource to storage"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"storage")," ",Object(n.b)("em",{parentName:"li"},"Storage")," - storage instance"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - overwrite existent")),Object(n.b)("h3",{id:"resourceto_ckan"},"resource.to","_","ckan"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_ckan(*, url, dataset, apikey=None, force=False)\n")),Object(n.b)("p",null,"Export resource to CKAN"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url")," ",Object(n.b)("em",{parentName:"li"},"string"),' - CKAN instance url e.g. "',Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://demo.ckan.org%22"}),'https://demo.ckan.org"')),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset")," ",Object(n.b)("em",{parentName:"li"},"string"),' - dataset id in CKAN e.g. "my-dataset"'),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"apikey?")," ",Object(n.b)("em",{parentName:"li"},"str"),' - API key for CKAN e.g. "51912f57-a657-4caa-b2a7-0a1c16821f4b"'),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - (optional) overwrite existing data")),Object(n.b)("h3",{id:"resourceto_sql"},"resource.to","_","sql"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),' | to_sql(*, url=None, engine=None, prefix="", namespace=None, force=False)\n')),Object(n.b)("p",null,"Export resource to SQL table"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url?")," ",Object(n.b)("em",{parentName:"li"},"string")," - SQL connection string"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"engine?")," ",Object(n.b)("em",{parentName:"li"},"object")," - ",Object(n.b)("inlineCode",{parentName:"li"},"sqlalchemy")," engine"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all tables"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"namespace?")," ",Object(n.b)("em",{parentName:"li"},"str")," - SQL scheme"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - overwrite existent")),Object(n.b)("h3",{id:"resourceto_pandas"},"resource.to","_","pandas"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_pandas()\n")),Object(n.b)("p",null,"Export resource to Pandas dataframe"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataframes")," ",Object(n.b)("em",{parentName:"li"},"dict")," - pandas dataframes"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - overwrite existent")),Object(n.b)("h3",{id:"resourceto_spss"},"resource.to","_","spss"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_spss(*, basepath, force=False)\n")),Object(n.b)("p",null,"Export resource to SPSS file"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"basepath")," ",Object(n.b)("em",{parentName:"li"},"str")," - SPSS dir path"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - overwrite existent")),Object(n.b)("h3",{id:"resourceto_bigquery"},"resource.to","_","bigquery"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),' | to_bigquery(*, service, project, dataset, prefix="", force=False)\n')),Object(n.b)("p",null,"Export resource to Bigquery table"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"service")," ",Object(n.b)("em",{parentName:"li"},"object")," - BigQuery ",Object(n.b)("inlineCode",{parentName:"li"},"Service")," object"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"project")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery project name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dataset")," ",Object(n.b)("em",{parentName:"li"},"str")," - BigQuery dataset name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all names"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"force")," ",Object(n.b)("em",{parentName:"li"},"bool")," - overwrite existent")),Object(n.b)("h2",{id:"row"},"Row"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Row(dict)\n")),Object(n.b)("p",null,"Row representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Row"))))),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"Constructor of this object is not Public API")),Object(n.b)("p",null,"This object is returned by ",Object(n.b)("inlineCode",{parentName:"p"},"extract"),", ",Object(n.b)("inlineCode",{parentName:"p"},"resource.read_rows"),", and other functions."),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),'rows = extract("data/table.csv")\nfor row in rows:\n    # work with the Row\n')),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cells")," ",Object(n.b)("em",{parentName:"li"},"any[]")," - array of cells"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_info")," ",Object(n.b)("em",{parentName:"li"},"dict")," - special field info structure"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"row_position")," ",Object(n.b)("em",{parentName:"li"},"int")," - row position from 1"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"row_number")," ",Object(n.b)("em",{parentName:"li"},"int")," - row number from 1")),Object(n.b)("h3",{id:"rowcells"},"row.cells"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | cells()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Field[]")," - table schema fields")),Object(n.b)("h3",{id:"rowfields"},"row.fields"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | fields()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Field[]")," - table schema fields")),Object(n.b)("h3",{id:"rowfield_names"},"row.field","_","names"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | field_names()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Schema")," - table schema")),Object(n.b)("h3",{id:"rowfield_positions"},"row.field","_","positions"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | field_positions()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int[]")," - table field positions")),Object(n.b)("h3",{id:"rowrow_position"},"row.row","_","position"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | row_position()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int")," - row position from 1")),Object(n.b)("h3",{id:"rowrow_number"},"row.row","_","number"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | row_number()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"int")," - row number from 1")),Object(n.b)("h3",{id:"rowblank_cells"},"row.blank","_","cells"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | blank_cells()\n")),Object(n.b)("p",null,"A mapping indexed by a field name with blank cells before parsing"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - row blank cells")),Object(n.b)("h3",{id:"rowerror_cells"},"row.error","_","cells"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | error_cells()\n")),Object(n.b)("p",null,"A mapping indexed by a field name with error cells before parsing"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - row error cells")),Object(n.b)("h3",{id:"rowerrors"},"row.errors"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | errors()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error[]")," - row errors")),Object(n.b)("h3",{id:"rowvalid"},"row.valid"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | valid()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - if row valid")),Object(n.b)("h3",{id:"rowto_str"},"row.to","_","str"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_str()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - a row as a CSV string")),Object(n.b)("h3",{id:"rowto_list"},"row.to","_","list"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_list(*, json=False, types=None)\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"json")," ",Object(n.b)("em",{parentName:"li"},"bool")," - make data types compatible with JSON format"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"types")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - list of supported types")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - a row as a list")),Object(n.b)("h3",{id:"rowto_dict"},"row.to","_","dict"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | to_dict(*, json=False, types=None)\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"json")," ",Object(n.b)("em",{parentName:"li"},"bool")," - make data types compatible with JSON format")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - a row as a dictionary")),Object(n.b)("h2",{id:"rowerror"},"RowError"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class RowError(Error)\n")),Object(n.b)("p",null,"Row error representation"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - error descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"note")," ",Object(n.b)("em",{parentName:"li"},"str")," - an error note"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"row_number")," ",Object(n.b)("em",{parentName:"li"},"int")," - row number"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"row_position")," ",Object(n.b)("em",{parentName:"li"},"int")," - row position")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"rowerrorfrom_row"},"rowError.from","_","row"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @classmethod\n | from_row(cls, row, *, note)\n")),Object(n.b)("p",null,"Create an error from a row"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"row")," ",Object(n.b)("em",{parentName:"li"},"Row")," - row"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"note")," ",Object(n.b)("em",{parentName:"li"},"str")," - note")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"RowError")," - error")),Object(n.b)("h2",{id:"s3control"},"S3Control"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class S3Control(Control)\n")),Object(n.b)("p",null,"S3 control representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.s3 import S3Control"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"endpoint_url?")," ",Object(n.b)("em",{parentName:"li"},"string")," - endpoint url")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"s3controlexpand"},"s3Control.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand metadata"),Object(n.b)("h2",{id:"s3loader"},"S3Loader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class S3Loader(Loader)\n")),Object(n.b)("p",null,"S3 loader implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.s3 import S3Loader"))))),Object(n.b)("h2",{id:"s3plugin"},"S3Plugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class S3Plugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for S3"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.s3 import S3Plugin"))))),Object(n.b)("h2",{id:"schema"},"Schema"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Schema(Metadata)\n")),Object(n.b)("p",null,"Schema representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Schema"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - schema descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"fields?")," ",Object(n.b)("em",{parentName:"li"},"dict[]")," - list of field descriptors"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"missing_values?")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - missing values"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"primary_key?")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - primary key"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"foreign_keys?")," ",Object(n.b)("em",{parentName:"li"},"dict[]")," - foreign keys")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"schemamissing_values"},"schema.missing","_","values"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | missing_values()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - missing values")),Object(n.b)("h3",{id:"schemaprimary_key"},"schema.primary","_","key"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | primary_key()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - primary key field names")),Object(n.b)("h3",{id:"schemaforeign_keys"},"schema.foreign","_","keys"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | foreign_keys()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict[]")," - foreign keys")),Object(n.b)("h3",{id:"schemafields"},"schema.fields"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property\n | fields()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Field[]")," - an array of field instances")),Object(n.b)("h3",{id:"schemafield_names"},"schema.field","_","names"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @Metadata.property(cache=False, write=False)\n | field_names()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - an array of field names")),Object(n.b)("h3",{id:"schemaadd_field"},"schema.add","_","field"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | add_field(descriptor)\n")),Object(n.b)("p",null,"Add new field to schema."),Object(n.b)("p",null,"The schema descriptor will be validated with newly added field descriptor."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - field descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Field/None")," - added ",Object(n.b)("inlineCode",{parentName:"li"},"Field")," instance or ",Object(n.b)("inlineCode",{parentName:"li"},"None")," if not added")),Object(n.b)("h3",{id:"schemaget_field"},"schema.get","_","field"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | get_field(name)\n")),Object(n.b)("p",null,"Get schema's field by name."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - schema field name")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - if field is not found")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Field")," - ",Object(n.b)("inlineCode",{parentName:"li"},"Field")," instance or ",Object(n.b)("inlineCode",{parentName:"li"},"None")," if not found")),Object(n.b)("h3",{id:"schemahas_field"},"schema.has","_","field"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | has_field(name)\n")),Object(n.b)("p",null,"Check if a field is present"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - schema field name")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - whether there is the field")),Object(n.b)("h3",{id:"schemaremove_field"},"schema.remove","_","field"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | remove_field(name)\n")),Object(n.b)("p",null,"Remove field by name."),Object(n.b)("p",null,"The schema descriptor will be validated after field descriptor removal."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - schema field name")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - if field is not found")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Field/None")," - removed ",Object(n.b)("inlineCode",{parentName:"li"},"Field")," instances or ",Object(n.b)("inlineCode",{parentName:"li"},"None")," if not found")),Object(n.b)("h3",{id:"schemaexpand"},"schema.expand"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | expand()\n")),Object(n.b)("p",null,"Expand the schema"),Object(n.b)("h3",{id:"schemaread_cells"},"schema.read","_","cells"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_cells(cells)\n")),Object(n.b)("p",null,"Read a list of cells (normalize/cast)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cells")," ",Object(n.b)("em",{parentName:"li"},"any[]")," - list of cells")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any[]")," - list of processed cells")),Object(n.b)("h3",{id:"schemawrite_cells"},"schema.write","_","cells"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | write_cells(cells, *, types=[])\n")),Object(n.b)("p",null,"Write a list of cells (normalize/uncast)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cells")," ",Object(n.b)("em",{parentName:"li"},"any[]")," - list of cells")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any[]")," - list of processed cells")),Object(n.b)("h3",{id:"schemafrom_sample"},"schema.from","_","sample"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @staticmethod\n | from_sample(sample, *, type=None, names=None, confidence=config.DEFAULT_INFER_CONFIDENCE, float_numbers=config.DEFAULT_FLOAT_NUMBER, missing_values=config.DEFAULT_MISSING_VALUES)\n")),Object(n.b)("p",null,"Infer schema from sample"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"sample")," ",Object(n.b)("em",{parentName:"li"},"any","[][]")," - data sample"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"type?")," ",Object(n.b)("em",{parentName:"li"},"str")," - enforce all the field to be the given type"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"names")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - enforce field names"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"confidence")," ",Object(n.b)("em",{parentName:"li"},"float")," - infer confidence from 0 to 1"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"float_numbers")," ",Object(n.b)("em",{parentName:"li"},"bool")," - infer numbers as ",Object(n.b)("inlineCode",{parentName:"li"},"float")," instead of ",Object(n.b)("inlineCode",{parentName:"li"},"Decimal")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"missing_values")," ",Object(n.b)("em",{parentName:"li"},"str[]")," - provide custom missing values")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Schema")," - schema")),Object(n.b)("h2",{id:"server"},"Server"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Server()\n")),Object(n.b)("p",null,"Server representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Schema"))))),Object(n.b)("h3",{id:"serverstart"},"server.start"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | start(port)\n")),Object(n.b)("p",null,"Start the server"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"port")," ",Object(n.b)("em",{parentName:"li"},"int")," - HTTP port")),Object(n.b)("h3",{id:"serverstop"},"server.stop"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | stop()\n")),Object(n.b)("p",null,"Stop the server"),Object(n.b)("h2",{id:"serverplugin"},"ServerPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class ServerPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Server"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.server import ServerPlugin"))))),Object(n.b)("h2",{id:"spssdialect"},"SpssDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class SpssDialect(Dialect)\n")),Object(n.b)("p",null,"Spss dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.spss import SpssDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"spssparser"},"SpssParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class SpssParser(Parser)\n")),Object(n.b)("p",null,"Spss parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.spss import SpssParser"))))),Object(n.b)("h2",{id:"spssplugin"},"SpssPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class SpssPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for SPSS"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.spss import SpssPlugin"))))),Object(n.b)("h2",{id:"spssstorage"},"SpssStorage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class SpssStorage(Storage)\n")),Object(n.b)("p",null,"SPSS storage implementation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.spss import SpssStorage"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"basepath?")," ",Object(n.b)("em",{parentName:"li"},"str")," - A path to a dir for reading/writing SAV files.\nDefaults to current dir.")),Object(n.b)("h2",{id:"sqldialect"},"SqlDialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class SqlDialect(Dialect)\n")),Object(n.b)("p",null,"SQL dialect representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.sql import SqlDialect"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"table")," ",Object(n.b)("em",{parentName:"li"},"str")," - table"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"order_by?")," ",Object(n.b)("em",{parentName:"li"},"str")," - order_by")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"sqlparser"},"SqlParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class SqlParser(Parser)\n")),Object(n.b)("p",null,"SQL parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.sql import SqlParser"))))),Object(n.b)("h2",{id:"sqlplugin"},"SqlPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class SqlPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for SQL"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.sql import SqlPlugin"))))),Object(n.b)("h2",{id:"sqlstorage"},"SqlStorage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class SqlStorage(Storage)\n")),Object(n.b)("p",null,"SQL storage implementation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.sql import SqlStorage"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"url?")," ",Object(n.b)("em",{parentName:"li"},"string")," - SQL connection string"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"engine?")," ",Object(n.b)("em",{parentName:"li"},"object")," - ",Object(n.b)("inlineCode",{parentName:"li"},"sqlalchemy")," engine"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"prefix?")," ",Object(n.b)("em",{parentName:"li"},"str")," - prefix for all tables"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"namespace?")," ",Object(n.b)("em",{parentName:"li"},"str")," - SQL scheme")),Object(n.b)("h2",{id:"status"},"Status"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Status(Metadata)\n")),Object(n.b)("p",null,"Status representation."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - schema descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h3",{id:"statusversion"},"status.version"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | version()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str")," - frictionless version")),Object(n.b)("h3",{id:"statustime"},"status.time"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | time()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"float")," - validation time")),Object(n.b)("h3",{id:"statusvalid"},"status.valid"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | valid()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - validation result")),Object(n.b)("h3",{id:"statusstats"},"status.stats"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | stats()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dict")," - validation stats")),Object(n.b)("h3",{id:"statuserrors"},"status.errors"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | errors()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error[]")," - validation errors")),Object(n.b)("h3",{id:"statustasks"},"status.tasks"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | tasks()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ReportTable[]")," - validation tasks")),Object(n.b)("h3",{id:"statustask"},"status.task"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | task()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ReportTable")," - validation task (if there is only one)")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - if there are more that 1 task")),Object(n.b)("h2",{id:"statustask-1"},"StatusTask"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class StatusTask(Metadata)\n")),Object(n.b)("p",null,"Status Task representation"),Object(n.b)("h3",{id:"statustaskvalid"},"statusTask.valid"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | valid()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bool")," - validation result")),Object(n.b)("h3",{id:"statustaskerrors"},"statusTask.errors"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | errors()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Error[]")," - validation errors")),Object(n.b)("h3",{id:"statustasktarget"},"statusTask.target"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | target()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any")," - validation target")),Object(n.b)("h3",{id:"statustasktype"},"statusTask.type"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @property\n | type()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any")," - validation target")),Object(n.b)("h2",{id:"storage"},"Storage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Storage()\n")),Object(n.b)("p",null,"Storage representation"),Object(n.b)("h2",{id:"stringtype"},"StringType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class StringType(Type)\n")),Object(n.b)("p",null,"String type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"system"},"System"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class System()\n")),Object(n.b)("p",null,"System representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import system"))))),Object(n.b)("p",null,"This class provides an ability to make system Frictionless calls.\nIt's available as ",Object(n.b)("inlineCode",{parentName:"p"},"frictionless.system")," singletone."),Object(n.b)("h3",{id:"systemregister"},"system.register"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | register(name, plugin)\n")),Object(n.b)("p",null,"Register a plugin"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - plugin name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"plugin")," ",Object(n.b)("em",{parentName:"li"},"Plugin")," - plugin to register")),Object(n.b)("h3",{id:"systemcreate_check"},"system.create","_","check"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_check(descriptor)\n")),Object(n.b)("p",null,"Create checks"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - check descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Check")," - check")),Object(n.b)("h3",{id:"systemcreate_control"},"system.create","_","control"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_control(resource, *, descriptor)\n")),Object(n.b)("p",null,"Create control"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resource")," ",Object(n.b)("em",{parentName:"li"},"Resource")," - control resource"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - control descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Control")," - control")),Object(n.b)("h3",{id:"systemcreate_dialect"},"system.create","_","dialect"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_dialect(resource, *, descriptor)\n")),Object(n.b)("p",null,"Create dialect"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resource")," ",Object(n.b)("em",{parentName:"li"},"Resource")," - dialect resource"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - dialect descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Dialect")," - dialect")),Object(n.b)("h3",{id:"systemcreate_file"},"system.create","_","file"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_file(source, **options)\n")),Object(n.b)("p",null,"Create file"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - file source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - file options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"File")," - file")),Object(n.b)("h3",{id:"systemcreate_loader"},"system.create","_","loader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_loader(resource)\n")),Object(n.b)("p",null,"Create loader"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resource")," ",Object(n.b)("em",{parentName:"li"},"Resource")," - loader resource")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Loader")," - loader")),Object(n.b)("h3",{id:"systemcreate_parser"},"system.create","_","parser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_parser(resource)\n")),Object(n.b)("p",null,"Create parser"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"resource")," ",Object(n.b)("em",{parentName:"li"},"Resource")," - parser resource")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Parser")," - parser")),Object(n.b)("h3",{id:"systemcreate_server"},"system.create","_","server"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_server(name, **options)\n")),Object(n.b)("p",null,"Create server"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - server name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"options")," ",Object(n.b)("em",{parentName:"li"},"str")," - server options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Server")," - server")),Object(n.b)("h3",{id:"systemcreate_step"},"system.create","_","step"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_step(descriptor)\n")),Object(n.b)("p",null,"Create steps"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - step descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Step")," - step")),Object(n.b)("h3",{id:"systemcreate_storage"},"system.create","_","storage"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_storage(name, **options)\n")),Object(n.b)("p",null,"Create storage"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"name")," ",Object(n.b)("em",{parentName:"li"},"str")," - storage name"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"options")," ",Object(n.b)("em",{parentName:"li"},"str")," - storage options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Storage")," - storage")),Object(n.b)("h3",{id:"systemcreate_type"},"system.create","_","type"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | create_type(field)\n")),Object(n.b)("p",null,"Create checks"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field")," ",Object(n.b)("em",{parentName:"li"},"Field")," - corresponding field")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Type")," - type")),Object(n.b)("h2",{id:"textcontrol"},"TextControl"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class TextControl(Control)\n")),Object(n.b)("p",null,"Text control representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.text import TextControl"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor?")," ",Object(n.b)("em",{parentName:"li"},"str|dict")," - descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Raises"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"FrictionlessException")," - raise any error that occurs during the process")),Object(n.b)("h2",{id:"textloader"},"TextLoader"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class TextLoader(Loader)\n")),Object(n.b)("p",null,"Text loader implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.text import TextLoader"))))),Object(n.b)("h2",{id:"textplugin"},"TextPlugin"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class TextPlugin(Plugin)\n")),Object(n.b)("p",null,"Plugin for Text Data"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless.plugins.local import TextPlugin"))))),Object(n.b)("h2",{id:"timetype"},"TimeType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class TimeType(Type)\n")),Object(n.b)("p",null,"Time type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"type"},"Type"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class Type()\n")),Object(n.b)("p",null,"Data type representation"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import Type"))))),Object(n.b)("p",null,"This class is for subclassing."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field")," ",Object(n.b)("em",{parentName:"li"},"Field")," - field")),Object(n.b)("h3",{id:"typeconstraints"},"type.constraints"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"str[]")," - a list of supported constraints")),Object(n.b)("h3",{id:"typefield"},"type.field"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | @cached_property\n | field()\n")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Field")," - field")),Object(n.b)("h3",{id:"typeread_cell"},"type.read","_","cell"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | read_cell(cell)\n")),Object(n.b)("p",null,"Convert cell (read direction)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cell")," ",Object(n.b)("em",{parentName:"li"},"any")," - cell to covert")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any")," - converted cell")),Object(n.b)("h3",{id:"typewrite_cell"},"type.write","_","cell"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"})," | write_cell(cell)\n")),Object(n.b)("p",null,"Convert cell (write direction)"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"cell")," ",Object(n.b)("em",{parentName:"li"},"any")," - cell to covert")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any")," - converted cell")),Object(n.b)("h2",{id:"xlsparser"},"XlsParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class XlsParser(Parser)\n")),Object(n.b)("p",null,"XLS parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"`from frictionless.plugins.excel import XlsParser")))),Object(n.b)("h2",{id:"xlsxparser"},"XlsxParser"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class XlsxParser(Parser)\n")),Object(n.b)("p",null,"XLSX parser implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"`from frictionless.plugins.excel import XlsxParser")))),Object(n.b)("h2",{id:"yeartype"},"YearType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class YearType(Type)\n")),Object(n.b)("p",null,"Year type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"yearmonthtype"},"YearmonthType"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class YearmonthType(Type)\n")),Object(n.b)("p",null,"Yearmonth type implementation."),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import types"))))),Object(n.b)("h2",{id:"baseline"},"baseline"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class baseline(Check)\n")),Object(n.b)("p",null,"Check a table for basic errors"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import checks"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Implicit"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"validate(...)"))))),Object(n.b)("p",null,"Ths check is enabled by default for any ",Object(n.b)("inlineCode",{parentName:"p"},"validate")," function run."),Object(n.b)("h2",{id:"checksum"},"checksum"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class checksum(Check)\n")),Object(n.b)("p",null,"Check a table's checksum"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import checks"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Implicit"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"validate(checksum={...})"))))),Object(n.b)("p",null,"Ths check is enabled by default if the ",Object(n.b)("inlineCode",{parentName:"p"},"checksum")," argument\nis provided for the ",Object(n.b)("inlineCode",{parentName:"p"},"validate")," function."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - check's descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"hash?")," ",Object(n.b)("em",{parentName:"li"},"str")," - a hash sum of the table's bytes"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"bytes?")," ",Object(n.b)("em",{parentName:"li"},"int")," - number of bytes"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"fields?")," ",Object(n.b)("em",{parentName:"li"},"int")," - number of fields"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"rows?")," ",Object(n.b)("em",{parentName:"li"},"int")," - number of rows")),Object(n.b)("h2",{id:"describe"},"describe"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"describe(source, *, type=None, **options)\n")),Object(n.b)("p",null,"Describe the data source"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import describe"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - data source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"type")," ",Object(n.b)("em",{parentName:"li"},"str")," - source type - ",Object(n.b)("inlineCode",{parentName:"li"},"schema"),", ",Object(n.b)("inlineCode",{parentName:"li"},"resource")," or ",Object(n.b)("inlineCode",{parentName:"li"},"package")," (default: infer)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - options for the underlaying describe function")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Package|Resource|Schema")," - metadata")),Object(n.b)("h2",{id:"describe_package"},"describe","_","package"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"describe_package(source, *, expand=False, nostats=False, **options)\n")),Object(n.b)("p",null,"Describe the given source as a package"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import describe_package"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - data source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"expand?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - if ",Object(n.b)("inlineCode",{parentName:"li"},"True")," it will expand the metadata"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"nostats?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - if ",Object(n.b)("inlineCode",{parentName:"li"},"True")," it not infer resource's stats"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Package constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Package")," - data package")),Object(n.b)("h2",{id:"describe_resource"},"describe","_","resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"describe_resource(source, *, expand=False, nostats=False, **options)\n")),Object(n.b)("p",null,"Describe the given source as a resource"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import describe_resource"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - data source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"expand?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - if ",Object(n.b)("inlineCode",{parentName:"li"},"True")," it will expand the metadata"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"nostats?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - if ",Object(n.b)("inlineCode",{parentName:"li"},"True")," it not infer resource's stats"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Resource constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Resource")," - data resource")),Object(n.b)("h2",{id:"describe_schema"},"describe","_","schema"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"describe_schema(source, *, expand=False, **options)\n")),Object(n.b)("p",null,"Describe the given source as a schema"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import describe_schema"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - data source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"expand?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - if ",Object(n.b)("inlineCode",{parentName:"li"},"True")," it will expand the metadata"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Resource constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Schema")," - table schema")),Object(n.b)("h2",{id:"deviated_value"},"deviated","_","value"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class deviated_value(Check)\n")),Object(n.b)("p",null,"Check for deviated values in a field"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import checks"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Implicit"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},'validate(checks=([{"code": "deviated-value", **descriptor}])'))))),Object(n.b)("p",null,"This check can be enabled using the ",Object(n.b)("inlineCode",{parentName:"p"},"checks")," parameter\nfor the ",Object(n.b)("inlineCode",{parentName:"p"},"validate")," function."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - check's descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_name")," ",Object(n.b)("em",{parentName:"li"},"str")," - a field name to check"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"average?")," ",Object(n.b)("em",{parentName:"li"},"str"),' - one of "mean", "median" or "mode" (default: "mean")'),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"interval?")," ",Object(n.b)("em",{parentName:"li"},"str")," - statistical interval (default: 3)")),Object(n.b)("h2",{id:"duplicate_row"},"duplicate","_","row"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class duplicate_row(Check)\n")),Object(n.b)("p",null,"Check for duplicate rows"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import checks"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Implicit"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},'validate(checks=[{"code": "duplicate-row"}])'))))),Object(n.b)("p",null,"This check can be enabled using the ",Object(n.b)("inlineCode",{parentName:"p"},"checks")," parameter\nfor the ",Object(n.b)("inlineCode",{parentName:"p"},"validate")," function."),Object(n.b)("h2",{id:"extract"},"extract"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"extract(source, *, type=None, process=None, stream=False, **options)\n")),Object(n.b)("p",null,"Extract resource rows"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import extract"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"dict|str")," - data source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"type")," ",Object(n.b)("em",{parentName:"li"},"str")," - source type - package of resource (default: infer)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"process?")," ",Object(n.b)("em",{parentName:"li"},"func")," - a row processor function"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"stream?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - return a row stream(s) instead of loading into memory"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - options for the underlaying function")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Row[]|{path")," - Row[]}: rows in a form depending on the source type")),Object(n.b)("h2",{id:"extract_package"},"extract","_","package"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"extract_package(source, *, process=None, stream=False, **options)\n")),Object(n.b)("p",null,"Extract package rows"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import extract_package"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"dict|str")," - data resource descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"process?")," ",Object(n.b)("em",{parentName:"li"},"func")," - a row processor function"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"stream?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - return a row streams instead of loading into memory"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Package constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"{path")," - Row[]}: a dictionary of arrays/streams of rows")),Object(n.b)("h2",{id:"extract_resource"},"extract","_","resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"extract_resource(source, *, process=None, stream=False, **options)\n")),Object(n.b)("p",null,"Extract resource rows"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import extract_resource"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"dict|str")," - data resource descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"process?")," ",Object(n.b)("em",{parentName:"li"},"func")," - a row processor function"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Resource constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Row[]")," - an array/stream of rows")),Object(n.b)("h2",{id:"forbidden_value"},"forbidden","_","value"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class forbidden_value(Check)\n")),Object(n.b)("p",null,"Check for forbidden values in a field"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import checks"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Implicit"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},'validate(checks=[{"code": "backlisted-value", **descriptor}])'))))),Object(n.b)("p",null,"This check can be enabled using the ",Object(n.b)("inlineCode",{parentName:"p"},"checks")," parameter\nfor the ",Object(n.b)("inlineCode",{parentName:"p"},"validate")," function."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - check's descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_name")," ",Object(n.b)("em",{parentName:"li"},"str")," - a field name to look into"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"forbidden")," ",Object(n.b)("em",{parentName:"li"},"any[]")," - a list of forbidden values")),Object(n.b)("h2",{id:"row_constraint"},"row","_","constraint"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class row_constraint(Check)\n")),Object(n.b)("p",null,"Check that every row satisfies a provided Python expression"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import checks"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Implicit"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},'validate(checks=([{"code": "row-constraint", **descriptor}])'))))),Object(n.b)("p",null,"This check can be enabled using the ",Object(n.b)("inlineCode",{parentName:"p"},"checks")," parameter\nfor the ",Object(n.b)("inlineCode",{parentName:"p"},"validate")," function. The syntax for the row constraint\ncheck can be found here - ",Object(n.b)("a",Object(l.a)({parentName:"p"},{href:"https://github.com/danthedeckie/simpleeval"}),"https://github.com/danthedeckie/simpleeval")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - check's descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"formula")," ",Object(n.b)("em",{parentName:"li"},"str")," - a python expression to evaluate against a row")),Object(n.b)("h2",{id:"sequential_value"},"sequential","_","value"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class sequential_value(Check)\n")),Object(n.b)("p",null,"Check that a column having sequential values"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import checks"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Implicit"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},'validate(checks=[{"code": "sequential-value", **descriptor}])'))))),Object(n.b)("p",null,"This check can be enabled using the ",Object(n.b)("inlineCode",{parentName:"p"},"checks")," parameter\nfor the ",Object(n.b)("inlineCode",{parentName:"p"},"validate")," function."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"descriptor")," ",Object(n.b)("em",{parentName:"li"},"dict")," - check's descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"field_name")," ",Object(n.b)("em",{parentName:"li"},"str")," - a field name to check")),Object(n.b)("h2",{id:"transform"},"transform"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"transform(source, type=None, **options)\n")),Object(n.b)("p",null,"Transform resource"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import transform"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - data source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"type")," ",Object(n.b)("em",{parentName:"li"},"str")," - source type - package, resource or pipeline (default: infer)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - options for the underlaying function")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any")," - the transform result")),Object(n.b)("h2",{id:"transform_package"},"transform","_","package"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"transform_package(source, *, steps, **options)\n")),Object(n.b)("p",null,"Transform package"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import transform_package"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - data source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"steps")," ",Object(n.b)("em",{parentName:"li"},"Step[]")," - transform steps"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Package constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Package")," - the transform result")),Object(n.b)("h2",{id:"transform_pipeline"},"transform","_","pipeline"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"transform_pipeline(source, *, parallel=False, **options)\n")),Object(n.b)("p",null,"Transform package"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import transform_package"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - a pipeline descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Pipeline constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"any")," - the pipeline output")),Object(n.b)("h2",{id:"transform_resource"},"transform","_","resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"transform_resource(source, *, steps, **options)\n")),Object(n.b)("p",null,"Transform resource"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import transform_resource"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - data source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"steps")," ",Object(n.b)("em",{parentName:"li"},"Step[]")," - transform steps"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Package constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Resource")," - the transform result")),Object(n.b)("h2",{id:"truncated_value"},"truncated","_","value"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"class truncated_value(Check)\n")),Object(n.b)("p",null,"Check for possible truncated values"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import checks"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Implicit"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},'validate(checks=([{"code": "truncated-value"}])'))))),Object(n.b)("p",null,"This check can be enabled using the ",Object(n.b)("inlineCode",{parentName:"p"},"checks")," parameter\nfor the ",Object(n.b)("inlineCode",{parentName:"p"},"validate")," function."),Object(n.b)("h2",{id:"validate"},"validate"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"@Report.from_validate\nvalidate(source, type=None, **options)\n")),Object(n.b)("p",null,"Validate resource"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import validate"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"dict|str")," - a data source"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"type")," ",Object(n.b)("em",{parentName:"li"},"str")," - source type - inquiry, package, resource, schema or table"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - options for the underlaying function")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Report")," - validation report")),Object(n.b)("h2",{id:"validate_inquiry"},"validate","_","inquiry"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"@Report.from_validate\nvalidate_inquiry(source, *, parallel=False, **options)\n")),Object(n.b)("p",null,"Validate inquiry"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import validate_inquiry"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"dict|str")," - an inquiry descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"parallel?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - enable multiprocessing")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Report")," - validation report")),Object(n.b)("h2",{id:"validate_package"},"validate","_","package"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"@Report.from_validate\nvalidate_package(source, noinfer=False, nolookup=False, parallel=False, **options)\n")),Object(n.b)("p",null,"Validate package"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import validate_package"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"dict|str")," - a package descriptor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"basepath?")," ",Object(n.b)("em",{parentName:"li"},"str")," - package basepath"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"trusted?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - don't raise an exception on unsafe paths"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"noinfer?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - don't call ",Object(n.b)("inlineCode",{parentName:"li"},"package.infer")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"nolookup?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - don't read lookup tables skipping integrity checks"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"parallel?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - enable multiprocessing"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Package constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Report")," - validation report")),Object(n.b)("h2",{id:"validate_resource"},"validate","_","resource"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"@Report.from_validate\nvalidate_resource(source, *, checks=None, checksum=None, pick_errors=None, skip_errors=None, limit_errors=config.DEFAULT_LIMIT_ERRORS, limit_memory=config.DEFAULT_LIMIT_MEMORY, noinfer=False, **options, ,)\n")),Object(n.b)("p",null,"Validate table"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import validate_table"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"any")," - the source of the resource"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"checks?")," ",Object(n.b)("em",{parentName:"li"},"list")," - a list of checks"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"checksum?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - a checksum dictionary\npick_errors? ((str|int)[]): pick errors\nskip_errors? ((str|int)[]): skip errors"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"limit_errors?")," ",Object(n.b)("em",{parentName:"li"},"int")," - limit errors"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"limit_memory?")," ",Object(n.b)("em",{parentName:"li"},"int")," - limit memory"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"noinfer?")," ",Object(n.b)("em",{parentName:"li"},"bool")," - validate resource as it is"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"**options?")," ",Object(n.b)("em",{parentName:"li"},"dict")," - Resource constructor options")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Report")," - validation report")),Object(n.b)("h2",{id:"validate_schema"},"validate","_","schema"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-python"}),"@Report.from_validate\nvalidate_schema(source, **options)\n")),Object(n.b)("p",null,"Validate schema"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"API"),Object(n.b)("th",Object(l.a)({parentName:"tr"},{align:null}),"Usage"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),"Public"),Object(n.b)("td",Object(l.a)({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"from frictionless import validate_schema"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Arguments"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"source")," ",Object(n.b)("em",{parentName:"li"},"dict|str")," - a schema descriptor")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Report")," - validation report")))}o.isMDXComponent=!0}}]);